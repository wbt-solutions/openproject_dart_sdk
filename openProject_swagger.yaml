swagger: '2.0'
info:
  title: OpenProject API v3
  version: "1.0.0"
  description: ''
securityDefinitions :
  basicAuth:     # <-- arbitrary name for the security scheme
    type: basic

security:
  - basicAuth: []  # <-- use the same name here
paths:
  /api/v3/examples:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
      summary: view aggregated result
      description: ''
      tags:
        - Collections
      parameters:
        - name: groupBy
          in: query
          description: >-
            The column to group by.

            Note: Aggregation is as of now only supported by the work package
            collection.

            You can pass any column name as returned by the [queries](#queries)
            endpoint.
          required: false
          type: string
        - name: showSums
          in: query
          description: ''
          required: false
          type: string
          default: 'false'
  '/api/v3/activities/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Activity"
          examples:
            application/hal+json:
              _type: 'Activity::Comment'
              _links:
                self:
                  href: /api/v3/activity/1
                  title: Priority changed from High to Low
                workPackage:
                  href: /api/v3/work_packages/1
                  title: quis numquam qui voluptatum quia praesentium blanditiis nisi
                user:
                  href: /api/v3/users/1
                  title: John Sheppard - admin
              id: 1
              details:
                - format: textile
                  raw: Lorem ipsum dolor sit amet.
                  html: <p>Lorem ipsum dolor sit amet.</p>
              comment:
                format: textile
                raw: Lorem ipsum dolor sit amet.
                html: <p>Lorem ipsum dolor sit amet.</p>
              createdAt: '2014-05-21T08:51:20Z'
              version: 31
      summary: View activity
      description: ''
      tags:
        - Activities
      parameters:
        - name: id
          in: path
          description: Activity id
          required: true
          type: integer
      produces:
        - application/hal+json
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: 'Activity::Comment'
              _links:
                self:
                  href: /api/v3/activity/1
                  title: Priority changed from High to Low
                workPackage:
                  href: /api/v3/work_packages/1
                  title: quis numquam qui voluptatum quia praesentium blanditiis nisi
                user:
                  href: /api/v3/users/1
                  title: John Sheppard - admin
              id: 1
              details:
                - format: textile
                  raw: Lorem ipsum dolor sit amet.
                  html: <p>Lorem ipsum dolor sit amet.</p>
              comment:
                format: textile
                raw: Lorem ipsum dolor sit amet.
                html: <p>Lorem ipsum dolor sit amet.</p>
              createdAt: '2014-05-21T08:51:20Z'
              version: 31
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit journals
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to edit the comment of this journal entry.
        '422':
          description: Returned if the client tries to modify a read-only property.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyIsReadOnly'
              message: The ID of an activity can't be changed.
      summary: Update activity
      description: >-
        Updates an activity's comment and, on success, returns the updated
        activity.
      tags:
        - Activities
      parameters:
        - name: id
          in: path
          description: Activity id
          required: true
          type: integer
        - name: body
          in: body
          schema:
            type: object
            properties:
              comment:
                type: object
                properties:
                  raw:
                    type: string
      produces:
        - application/hal+json
  '/api/v3/attachments/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Attachment"
          examples: {}
        '404':
          description: >-
            Returned if the attachment does not exist or the client does not
            have sufficient permissions

            to see it.


            **Required permission:** view permission for the container of the
            attachment


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of an attachment.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified attachment does not exist.
      summary: View attachment
      description: ''
      tags:
        - Attachments
      parameters:
        - name: id
          in: path
          description: Attachment id
          required: true
          type: integer
      produces:
        - application/hal+json
    delete:
      responses:
        '204':
          description: >-
            Returned if the attachment was deleted successfully.


            Note that the response body is empty as of now. In future versions
            of the API a body

            *might* be returned along with an appropriate HTTP status.
          headers: {}
          examples: {}
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** edit permission for the container of the
            attachment


            *Note that you will only receive this error, if you are at least
            allowed to see the attachment.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to delete this attachment.
        '404':
          description: >-
            Returned if the attachment does not exist or the client does not

            to see it.


            **Required permission:** view permission for the container of the
            attachment


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of an attachment.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified attachment does not exist.
      summary: Delete attachment
      description: Permanently deletes the specified attachment.
      tags:
        - Attachments
      parameters:
        - name: id
          in: path
          description: Attachment id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/work_packages/{id}/attachments':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions

            to see it.


            **Required permission:** view work package


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of a work package.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
      summary: List attachments
      description: ''
      tags:
        - Attachments
      parameters:
        - name: id
          in: path
          description: ID of the work package whose attachments will be listed
          required: true
          type: integer
      produces:
        - application/hal+json
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '400':
          description: >-
            Returned if the client sends a not understandable request. Reasons
            include:


            * Omitting one of the required parts (metadata and file)


            * sending unparsable JSON in the metadata part
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request could not be parsed as JSON.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** edit work package or add work package


            *Note that you will only receive this error, if you are at least
            allowed to see the work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to delete this attachment.
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions

            to see it.


            **Required permission:** view work package


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of a work package.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
        '422':
          description: |-
            Returned if the client tries to send an invalid attachment.
            Reasons are:

            * Omitting the file name (`fileName` property of metadata part)

            * Sending a file that is too large
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: File is too large (maximum size is 5242880 Bytes).
      summary: Add attachment
      description: >-
        To add an attachment to a work package, a client needs to issue a
        request of type `multipart/form-data`

        with exactly two parts.


        The first part *must* be called `metadata`. Its content type is expected
        to be `application/json`,

        the body *must* be a single JSON object, containing at least the
        `fileName` and optionally the attachments `description`.


        The second part *must* be called `file`, its content type *should* match
        the mime type of the file.

        The body *must* be the raw content of the file.

        Note that a `filename` must be indicated in the `Content-Disposition` of
        this part, however it will be ignored.

        Instead the `fileName` inside the JSON of the metadata part will be
        used.
      tags:
        - Attachments
      parameters:
        - name: id
          in: path
          description: ID of the work package to receive the attachment
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/projects/{project_id}/categories':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/projects/11/categories
              total: 2
              count: 2
              _type: Collection
              _embedded:
                elements:
                  - _links:
                      self:
                        href: /api/v3/categories/10
                        title: Category with assignee
                      project:
                        href: /api/v3/projects/11
                        title: Example project
                      defaultAssignee:
                        href: /api/v3/users/42
                        title: John Sheppard
                    _type: Category
                    id: 10
                    name: Foo
                  - _links:
                      self:
                        href: /api/v3/categories/11
                      project:
                        href: /api/v3/projects/11
                    _type: Category
                    id: 11
                    name: Bar
        '404':
          description: >-
            Returned if the project does not exist or the client does not have
            sufficient permissions

            to see it.


            **Required permission:** view project


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of a project.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified project does not exist.
      summary: List categories of a project
      description: ''
      tags:
        - Categories
      parameters:
        - name: project_id
          in: path
          description: ID of the project whoose categories will be listed
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/categories/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/categories/10
                  title: Category with assignee
                project:
                  href: /api/v3/projects/11
                  title: Example project
                defaultAssignee:
                  href: /api/v3/users/42
                  title: John Sheppard
              _type: Category
              id: 10
              name: Foo
        '404':
          description: >-
            Returned if the category does not exist or the client does not have
            sufficient permissions

            to see it.


            **Required permission:** view project (defining the category)


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of

            a category. That's why a 404 is returned here, even if a 403 might
            be more appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified category does not exist.
      summary: View Category
      description: ''
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          description: category id
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/configuration:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Configuration"
          examples:
            application/hal+json:
              _type: Configuration
              _links:
                href: /api/v3/configuration
              maximumAttachmentFileSize: 5242880
              perPageOptions:
                - 1
                - 10
                - 100
      summary: View configuration
      description: ''
      tags:
        - Configuration
      parameters: []
      produces:
        - application/hal+json
  '/api/v3/custom_actions/{custom_action_id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: CustomAction
              name: Change project and type
              description: Changes project and type in one go
              _links:
                executeImmediately:
                  href: /apiChanges project and type in one go
                  title: Execute Change project and type
                  method: post
                self:
                  href: /api/v3/custom_actions/2
                  title: Change project and type
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work packages in any project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not authorized to access this resource.
        '404':
          description: Returned if the custom action does not exist.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The requested resource could not be found.
      summary: View custom action
      description: ''
      tags:
        - Custom actions
      parameters:
        - name: custom_action_id
          in: path
          description: The id of the custom action to fetch
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/custom_actions/{custom_action_id}/execute':
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** edit work packages - Additional permissions
            might be required based on the custom action.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not authorized to access this resource.
        '404':
          description: Returned if the custom action does not exist.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The requested resource could not be found.
        '409':
          description: >-
            Returned if the client provided an outdated lockVersion or no
            lockVersion at all.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:UpdateConflict'
              message: >-
                Couldn't update the resource because of conflicting
                modifications.
        '422':
          description: >-
            Returned if the custom action was not executed successfully e.g.
            when a constraint on a work package property was violated.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: Delay must be a number greater than or equal to 0
              _embedded:
                details:
                  attribute: delay
      summary: Execute custom action
      description: >-
        A POST to this end point executes the custom action on the work package
        provided in the payload. The altered work package will be returned. In
        order to avoid executing
         the custom action unbeknown to a change that has already taken place, the client has to provide the work package's current lockVersion.
      tags:
        - Custom actions
      parameters:
        - name: custom_action_id
          in: path
          description: The id of the custom action to execute
          required: true
          type: integer
        - name: body
          in: body
          schema:
            type: object
            properties:
              lockVersion:
                type: string
              _links:
                type: object
                properties:
                  workPackage:
                    type: object
                    properties:
                      href:
                        type: string
      produces:
        - application/hal+json
  '/api/v3/custom_objects/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/custom_objects/1
              _type: CustomObject
              value: Foo
        '404':
          description: >-
            Returned if the custom object does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package in any project the custom
            object's custom field is active in.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified resource does not exist.
      summary: View Custom Object
      description: ''
      tags:
        - Custom Objects
      parameters:
        - name: id
          in: path
          description: The custom object's identifier
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/example/form:
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/example/form
                validate:
                  href: /api/v3/example/form
                  method: POST
                previewMarkup:
                  href: /api/v3/render/textile
                  method: POST
                commit:
                  href: /api/v3/example
                  method: PATCH
              _type: Form
              _embedded:
                payload:
                  _links:
                    status:
                      href: /api/v3/statuses/1
                  _type: Example
                  lockVersion: 5
                  subject: An example title
                schema:
                  _type: Schema
                  _links:
                    self:
                      href: /api/v3/example/schema
                  lockVersion:
                    type: Integer
                    writable: false
                  subject:
                    type: String
                    minLength: 1
                    maxLength: 255
                  status:
                    _links:
                      allowedValues:
                        - href: /api/v3/statuses/1
                          title: New
                        - href: /api/v3/statuses/2
                          title: Closed
                    type: Status
                    _embedded:
                      allowedValues:
                        - _links:
                            self:
                              href: /api/v3/statuses/1
                          _type: Status
                          id: 1
                          name: New
                          position: 1
                          isDefault: true
                          isClosed: false
                          defaultDoneRatio: 0
                          createdAt: '2014-05-21T08:51:20Z'
                          updatedAt: '2014-05-21T09:12:00Z'
                        - _links:
                            self:
                              href: /api/v3/statuses/2
                          _type: Status
                          id: 2
                          name: Closed
                          position: 2
                          isDefault: false
                          isClosed: true
                          defaultDoneRatio: 100
                          createdAt: '2014-05-21T08:51:20Z'
                          updatedAt: '2014-05-21T09:12:00Z'
                validationErrors:
                  subject:
                    _type: Error
                    errorIdentifier: 'urn:openproject-org:api:v3:errors:BadExampleError'
                    message: >-
                      For the purpose of this example we need a validation
                      error. The remainder of the response pretends there were
                      no errors.
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body and the request body

            was not empty.


            Note that this error only occurs when the content is not at all a
            single JSON object.

            It **does not occur** for requests containing undefined properties
            or invalid property values.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: >-
                The request body was neither empty, nor did it contain a single
                JSON object.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions to
            modify the associated resource.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to edit example resources.
        '409':
          description: >-
            Returned if underlying resource was changed since the client
            requested the form. This is determined using the `lockVersion`
            property.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:UpdateConflict'
              message: The resource you are about to edit was changed in the meantime.
      summary: show or validate form
      description: >-
        This is an example of how a form might look like. Note that this
        endpoint does not exist in the actual implementation.
      tags:
        - Forms
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              lockVersion:
                type: number
              _type:
                type: string
              subject:
                type: string
      produces:
        - application/hal+json
  /api/v3/help_texts:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
      summary: List all help texts
      description: ''
      tags:
        - Help texts
      parameters: []
  '/api/v3/help_texts/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
      summary: View help text
      description: ''
      tags:
        - Help texts
      parameters:
        - name: id
          in: path
          description: Help text id
          required: true
          type: integer
  /api/v3/principals:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Collection
              total: 3
              count: 3
              _embedded:
                elements:
                  - _type: User
                    id: 4
                    login: Eliza92778
                    admin: false
                    subtype: User
                    firstName: Danika
                    lastName: O'Keefe
                    name: Danika O'Keefe
                    email: jackie@dicki.org
                    avatar: 'https://example.org/users/4/avatar'
                    createdAt: '2015-03-20T12:57:02Z'
                    updatedAt: '2015-06-16T15:28:14Z'
                    status: active
                    identityUrl: null
                    _links:
                      self:
                        href: /api/v3/users/4
                        title: Danika O'Keefe
                      showUser:
                        href: /users/4
                        type: text/html
                      updateImmediately:
                        href: /api/v3/users/4
                        title: Update Eliza92778
                        method: patch
                      lock:
                        href: /api/v3/users/4/lock
                        title: Set lock on Eliza92778
                        method: post
                      delete:
                        href: /api/v3/users/4
                        title: Delete Eliza92778
                        method: delete
                  - _type: User
                    id: 2
                    login: Sebastian9686
                    admin: false
                    subtype: User
                    firstName: Peggie
                    lastName: Feeney
                    name: Peggie Feeney
                    email: null
                    avatar: 'https://example.org/users/4/avatar'
                    createdAt: '2015-03-20T12:56:55Z'
                    updatedAt: '2015-03-20T12:56:55Z'
                    status: active
                    identityUrl: null
                    _links:
                      self:
                        href: /api/v3/users/2
                        title: Peggie Feeney
                      showUser:
                        href: /users/2
                        type: text/html
                      updateImmediately:
                        href: /api/v3/users/2
                        title: Update Sebastian9686
                        method: patch
                      lock:
                        href: /api/v3/users/2/lock
                        title: Set lock on Sebastian9686
                        method: post
                      delete:
                        href: /api/v3/users/2
                        title: Delete Sebastian9686
                        method: delete
                  - _type: User
                    id: 9
                    login: ''
                    admin: false
                    subtype: Group
                    firstName: ''
                    lastName: Group 1
                    name: Group 1
                    email: null
                    avatar: ''
                    createdAt: '2015-09-23T11:06:36Z'
                    updatedAt: '2015-09-23T11:06:36Z'
                    status: active
                    _links:
                      self:
                        href: /api/v3/users/9
                        title: Group 1
                      showUser:
                        href: /users/9
                        type: text/html
                      updateImmediately:
                        href: /api/v3/users/9
                        title: 'Update '
                        method: patch
                      delete:
                        href: /api/v3/users/9
                        title: 'Delete '
                        method: delete
              _links:
                self:
                  href: /api/v3/principals
      summary: List principals
      description: >-
        List all principals. The client can choose to filter the principals
        similar to how work packages are filtered. In addition to the provided
        filters, the server will reduce the result set to only contain
        principals who are members in projects the client is allowed to see.
      tags:
        - Principals
      parameters:
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions.

            Accepts the same format as returned by the [queries](#queries)
            endpoint.

            Currently supported filters are:


            + type: filters principals by their type (*User*, *Group*).


            + member: filters principals by the projects they are members in.
          required: false
          type: string
      produces:
        - application/hal+json
  /api/v3/priorities:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/priorities
              _type: Collection
              total: 4
              count: 4
              _embedded:
                elements:
                  - _type: Priority
                    _links:
                      self:
                        href: /api/v3/priorities/1
                        title: Low
                    id: 1
                    name: Low
                    position: 1
                    isDefault: false
                    isActive: true
                  - _type: Priority
                    _links:
                      self:
                        href: /api/v3/priorities/2
                        title: Normal
                    id: 2
                    name: Normal
                    position: 2
                    isDefault: true
                    isActive: true
                  - _type: Priority
                    _links:
                      self:
                        href: /api/v3/priorities/3
                        title: High
                    id: 3
                    name: High
                    position: 3
                    isDefault: false
                    isActive: true
                  - _type: Priority
                    _links:
                      self:
                        href: /api/v3/priorities/4
                        title: Immediate
                    id: 4
                    name: Immediate
                    position: 5
                    isDefault: false
                    isActive: true
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to see the priorities.
      summary: List all Priorities
      description: ''
      tags:
        - Priorities
      parameters: []
      produces:
        - application/hal+json
  '/api/v3/priorities/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Priority
              _links:
                self:
                  href: /api/v3/priorities/1
                  title: Low
              id: 1
              name: Low
              position: 1
              isDefault: false
              isActive: true
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to see this priority.
      summary: View Priority
      description: ''
      tags:
        - Priorities
      parameters:
        - name: id
          in: path
          description: Priority id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/projects/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Project"
          examples:
            application/hal+json:
              _type: Project
              _links:
                self:
                  href: /api/v3/projects/1
                  title: Lorem
                createWorkPackage:
                  href: /api/v3/projects/1/work_packages/form
                  method: post
                createWorkPackageImmediate:
                  href: /api/v3/projects/1/work_packages
                  method: post
                categories:
                  href: /api/v3/projects/1/categories
                types:
                  href: /api/v3/projects/1/types
                versions:
                  href: /api/v3/projects/1/versions
                workPackages:
                  href: /api/v3/projects/1/work_packages
              id: 1
              identifier: project_identifier
              name: Project example
              description: Lorem ipsum dolor sit amet
              createdAt: '2014-05-21T08:51:20Z'
              updatedAt: '2014-05-21T08:51:20Z'
        '404':
          description: >-
            Returned if the project does not exist or the client does not have
            sufficient permissions

            to see it.


            **Required permission:** view project


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of a project.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified project does not exist.
      summary: View project
      description: ''
      tags:
        - Projects
      parameters:
        - name: id
          in: path
          description: Project id
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/projects:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Projects"
          examples: {}
      summary: List projects
      description: >-
        Returns a collection of projects. The collection can be filtered via
        query parameters similar to how work packages are filtered. In addition
        to the provided filter, the result set is always limited to only contain
        projects the client is allowed to see.
      tags:
        - Projects
      parameters:
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions.

            Accepts the same format as returned by the [queries](#queries)
            endpoint.

            Currently supported filters are:


            + ancestor: filters projects by their ancestor. A project is not
            considered to be it's own ancestor.
          required: false
          type: string
  '/api/v3/versions/{id}/projects':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/versions/2/projects
              total: 1
              count: 1
              _type: Collection
              _embedded:
                elements:
                  - _type: Project
                    _links:
                      self:
                        href: /api/v3/projects/1
                        title: Lorem
                      categories:
                        href: /api/v3/projects/1/categories
                      versions:
                        href: /api/v3/projects/1/versions
                    id: 1
                    identifier: project_identifier
                    name: Project example
                    description: Lorem ipsum dolor sit amet
                    createdAt: '2014-05-21T08:51:20Z'
                    updatedAt: '2014-05-21T08:51:20Z'
        '404':
          description: >-
            Returned if the version does not exist or the client does not have
            sufficient permissions

            to see it.


            **Required permission:** view work packages **or** manage versions
            (any project where the given version is available)


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of a version.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified version does not exist.
      summary: List projects with version
      description: >-
        This endpoint lists the projects where the given version is available.


        The projects returned depend on the sharing settings of the given
        version,

        but are also limited to the projects that the current user is allowed to
        see.
      tags:
        - Projects
      parameters:
        - name: id
          in: path
          description: Version id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/queries/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Query
              id: 9
              name: fdsfdsfdsf
              filters:
                - _type: StatusQueryFilter
                  name: Status
                  _links:
                    filter:
                      href: /api/v3/queries/filters/status
                      title: Status
                    operator:
                      href: /api/v3/queries/operators/o
                      title: open
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/status
                    values: []
                - _type: DueDateQueryFilter
                  name: Due date
                  values:
                    - '1'
                  _links:
                    filter:
                      href: /api/v3/queries/filters/dueDate
                      title: Due date
                    operator:
                      href: /api/v3/queries/operators/<t+
                      title: in less than
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/dueDate
              public: false
              sums: false
              starred: false
              _embedded:
                results:
                  _type: WorkPackageCollection
                  total: 234
                  count: 30
                  pageSize: 2
                  offset: 1
                  _embedded:
                    elements:
                      - <--- shortened for brevity --->
                  _links:
                    self:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    jumpTo:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    changeSize:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    createWorkPackage:
                      href: /api/v3/work_packages/form
                      method: post
                    createWorkPackageImmediate:
                      href: /api/v3/work_packages
                      method: post
              _links:
                self:
                  href: /api/v3/queries/9
                  title: fdsfdsfdsf
                results:
                  href: >-
                    /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                columns:
                  - href: /api/v3/queries/columns/id
                    title: ID
                  - href: /api/v3/queries/columns/subject
                    title: Subject
                  - href: /api/v3/queries/columns/type
                    title: Type
                  - href: /api/v3/queries/columns/status
                    title: Status
                  - href: /api/v3/queries/columns/priority
                    title: Priority
                  - href: /api/v3/queries/columns/assignee
                    title: Assignee
                  - href: /api/v3/queries/columns/updated_at
                    title: Updated on
                groupBy:
                  href: null
                  title: null
                sortBy:
                  - href: /api/v3/queries/sort_bys/parent-desc
                    title: Parent (Descending)
                user:
                  href: /api/v3/users/1
                  title: OpenProject Admin
                project:
                  href: /api/v3/projects/3
                  title: copy
        '404':
          description: >-
            Returned if the query does not exist or the client does not have
            sufficient permissions to see it.


            **Required condition:** query belongs to user or query is public


            **Required permission:** view work package in queries project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified query does not exist.
      summary: View query
      description: >-
        Retreive an individual query as identified by the id parameter. Then end
        point accepts a number of parameters that can be used to override the
        resources' persisted parameters.
      tags:
        - Queries
      parameters:
        - name: id
          in: path
          description: Query id
          required: true
          type: integer
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions. The filters provided as
            parameters are not applied to the query but are instead used to
            override the query's persisted filters. All filters also accepted by
            the work packages endpoint are accepted.
          required: false
          type: string
        - name: offset
          in: query
          description: Page number inside the queries' result collection of work packages.
          required: false
          type: integer
          default: 1
        - name: pageSize
          in: query
          description: >-
            Number of elements to display per page for the queries' result
            collection of work packages.
          required: false
          type: integer
        - name: sortBy
          in: query
          description: >-
            JSON specifying sort criteria. The sort criteria is applied to the
            querie's result collection of work packages overriding the query's
            persisted sort criteria.
          required: false
          type: string
        - name: groupBy
          in: query
          description: >-
            The column to group by. The grouping criteria is applied to the to
            the querie's result collection of work packages overriding the
            query's persisted group criteria.
          required: false
          type: string
        - name: showSums
          in: query
          description: >-
            Indicates whether properties should be summed up if they support it.
            The showSums parameter is applied to the to the querie's result
            collection of work packages overriding the query's persisted sums
            property.
          required: false
          type: boolean
          default: false
        - name: timelineVisible
          in: query
          description: Indicates whether the timeline should be shown.
          required: false
          type: boolean
          default: false
        - name: timelineLabels
          in: query
          description: Overridden labels in the timeline view
          required: false
          type: string
          default: '{}'
        - name: showHierarchies
          in: query
          description: Indicates whether the hierarchy mode should be enabled.
          required: false
          type: boolean
          default: true
      produces:
        - application/hal+json
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Query
              id: 9
              name: fdsfdsfdsf
              filters:
                - _type: StatusQueryFilter
                  name: Status
                  _links:
                    filter:
                      href: /api/v3/queries/filters/status
                      title: Status
                    operator:
                      href: /api/v3/queries/operators/o
                      title: open
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/status
                    values: []
                - _type: DueDateQueryFilter
                  name: Due date
                  values:
                    - '1'
                  _links:
                    filter:
                      href: /api/v3/queries/filters/dueDate
                      title: Due date
                    operator:
                      href: /api/v3/queries/operators/<t+
                      title: in less than
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/dueDate
              public: false
              sums: false
              starred: false
              _embedded:
                results:
                  _type: WorkPackageCollection
                  total: 234
                  count: 30
                  pageSize: 2
                  offset: 1
                  _embedded:
                    elements:
                      - <--- shortened for brevity --->
                  _links:
                    self:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    jumpTo:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    changeSize:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    createWorkPackage:
                      href: /api/v3/work_packages/form
                      method: post
                    createWorkPackageImmediate:
                      href: /api/v3/work_packages
                      method: post
              _links:
                self:
                  href: /api/v3/queries/9
                  title: fdsfdsfdsf
                results:
                  href: >-
                    /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                columns:
                  - href: /api/v3/queries/columns/id
                    title: ID
                  - href: /api/v3/queries/columns/subject
                    title: Subject
                  - href: /api/v3/queries/columns/type
                    title: Type
                  - href: /api/v3/queries/columns/status
                    title: Status
                  - href: /api/v3/queries/columns/priority
                    title: Priority
                  - href: /api/v3/queries/columns/assignee
                    title: Assignee
                  - href: /api/v3/queries/columns/updated_at
                    title: Updated on
                groupBy:
                  href: null
                  title: null
                sortBy:
                  - href: /api/v3/queries/sort_bys/parent-desc
                    title: Parent (Descending)
                user:
                  href: /api/v3/users/1
                  title: OpenProject Admin
                project:
                  href: /api/v3/projects/3
                  title: copy
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to edit the content of the work package.
        '404':
          description: >-
            Returned if the query does not exist or the client does not have
            sufficient permissions to see it.


            **Required permission:** view work packages in the query's project
            (unless global)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified query does not exist.
        '422':
          description: >-
            Returned if:


            * the client tries to modify a read-only property
            (`PropertyIsReadOnly`)


            * a constraint for a property was violated
            (`PropertyConstraintViolation`)


            * the client provides a link to an invalid resource
            (`ResourceTypeMismatch`)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: The name might not be blank.
              _embedded:
                details:
                  attribute: name
      summary: Edit Query
      description: >-
        When calling this endpoint the client provides a single object,
        containing the properties and links that it wants to change, in the
        body.

        Note that it is only allowed to provide properties or links supporting
        the **write** operation.
      tags:
        - Queries
      parameters:
        - name: id
          in: path
          description: Query id
          required: true
          type: integer
        - name: body
          in: body
          schema:
            type: object
            properties:
              name:
                type: string
      produces:
        - application/hal+json
    delete:
      responses:
        '204':
          description: No Content
          headers: {}
          examples: {}
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** for own queries none; for public queries:
            manage public queries


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding query.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not authorized to access this resource.
        '404':
          description: >-
            Returned if the query does not exist or the client does not have
            sufficient permissions to see it.


            **Required condition:** query belongs to user or query is public


            **Required permission:** view work package in queries project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The requested resource could not be found.
      summary: Delete query
      description: Delete the query identified by the id parameter
      tags:
        - Queries
      parameters:
        - name: id
          in: path
          description: Query id
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/queries/default:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Query
              name: default
              filters:
                - _type: StatusQueryFilter
                  name: Status
                  _links:
                    filter:
                      href: /api/v3/queries/filters/status
                      title: Status
                    operator:
                      href: /api/v3/queries/operators/o
                      title: open
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/status
                    values: []
              public: false
              sums: false
              timelineVisible: false
              timelineZoomLevel: days
              timelineLabels: {}
              showHierarchies: true
              starred: false
              _embedded:
                results:
                  _type: WorkPackageCollection
                  total: 234
                  count: 30
                  pageSize: 2
                  offset: 1
                  _embedded:
                    elements:
                      - <--- shortened for brevity --->
                  _links:
                    self:
                      href: >-
                        /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    jumpTo:
                      href: >-
                        /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    changeSize:
                      href: >-
                        /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    createWorkPackage:
                      href: /api/v3/work_packages/form
                      method: post
                    createWorkPackageImmediate:
                      href: /api/v3/work_packages
                      method: post
              _links:
                self:
                  href: /api/v3/queries/default
                  title: Default
                results:
                  href: >-
                    /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                columns:
                  - href: /api/v3/queries/columns/id
                    title: ID
                  - href: /api/v3/queries/columns/subject
                    title: Subject
                  - href: /api/v3/queries/columns/type
                    title: Type
                  - href: /api/v3/queries/columns/status
                    title: Status
                  - href: /api/v3/queries/columns/priority
                    title: Priority
                  - href: /api/v3/queries/columns/assignee
                    title: Assignee
                  - href: /api/v3/queries/columns/updated_at
                    title: Updated on
                groupBy:
                  href: null
                  title: null
                sortBy:
                  - href: /api/v3/queries/sort_bys/parent-desc
                    title: Parent (Descending)
                user:
                  href: /api/v3/users/1
                  title: OpenProject Admin
                project:
                  href: null
        '403':
          description: >-
            Returned if the client does not have sufficient permissions to see
            the default query.


            **Required permission:** view work packages in any project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not authorized to access this resource.
      summary: View default query
      description: >-
        Same as [viewing an existing, persisted Query](#queries-query-get) in
        its response, this resource returns an unpersisted query and by that
        allows to get the default query configuration. The client may also
        provide additional parameters which will modify the default query.
      tags:
        - Queries
      parameters:
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions. The filters provided as
            parameters are not applied to the query but are instead used to
            override the query's persisted filters. All filters also accepted by
            the work packages endpoint are accepted.
          required: false
          type: string
        - name: offset
          in: query
          description: Page number inside the queries' result collection of work packages.
          required: false
          type: integer
          default: 1
        - name: pageSize
          in: query
          description: >-
            Number of elements to display per page for the queries' result
            collection of work packages.
          required: false
          type: integer
        - name: sortBy
          in: query
          description: >-
            JSON specifying sort criteria. The sort criteria is applied to the
            querie's result collection of work packages overriding the query's
            persisted sort criteria.
          required: false
          type: string
        - name: groupBy
          in: query
          description: >-
            The column to group by. The grouping criteria is applied to the to
            the querie's result collection of work packages overriding the
            query's persisted group criteria.
          required: false
          type: string
        - name: showSums
          in: query
          description: >-
            Indicates whether properties should be summed up if they support it.
            The showSums parameter is applied to the to the querie's result
            collection of work packages overriding the query's persisted sums
            property.
          required: false
          type: boolean
          default: false
        - name: timelineVisible
          in: query
          description: Indicates whether the timeline should be shown.
          required: false
          type: boolean
          default: false
        - name: timelineZoomLevel
          in: query
          description: >-
            Indicates in what zoom level the timeline should be shown. Valid
            values are  `days`, `weeks`, `months`, `quarters`, and `years`.
          required: false
          type: string
          default: days
        - name: showHierarchies
          in: query
          description: Indicates whether the hierarchy mode should be enabled.
          required: false
          type: boolean
          default: true
      produces:
        - application/hal+json
  '/api/v3/projects/{id}/queries/default':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Query
              name: default
              filters:
                - _type: StatusQueryFilter
                  name: Status
                  _links:
                    filter:
                      href: /api/v3/queries/filters/status
                      title: Status
                    operator:
                      href: /api/v3/queries/operators/o
                      title: open
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/status
                    values: []
              public: false
              sums: false
              timelineVisible: false
              timelineZoomLevel: days
              showHierarchies: true
              starred: false
              _embedded:
                results:
                  _type: WorkPackageCollection
                  total: 234
                  count: 30
                  pageSize: 2
                  offset: 1
                  _embedded:
                    elements:
                      - <--- shortened for brevity --->
                  _links:
                    self:
                      href: >-
                        /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    jumpTo:
                      href: >-
                        /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    changeSize:
                      href: >-
                        /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    createWorkPackage:
                      href: /api/v3/work_packages/form
                      method: post
                    createWorkPackageImmediate:
                      href: /api/v3/work_packages
                      method: post
              _links:
                self:
                  href: /api/v3/projects/42/queries/default
                  title: Default
                results:
                  href: >-
                    /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                columns:
                  - href: /api/v3/queries/columns/id
                    title: ID
                  - href: /api/v3/queries/columns/subject
                    title: Subject
                  - href: /api/v3/queries/columns/type
                    title: Type
                  - href: /api/v3/queries/columns/status
                    title: Status
                  - href: /api/v3/queries/columns/priority
                    title: Priority
                  - href: /api/v3/queries/columns/assignee
                    title: Assignee
                  - href: /api/v3/queries/columns/updated_at
                    title: Updated on
                groupBy:
                  href: null
                  title: null
                sortBy:
                  - href: /api/v3/queries/sort_bys/parent-desc
                    title: Parent (Descending)
                user:
                  href: /api/v3/users/1
                  title: OpenProject Admin
                project:
                  href: /api/v3/projects/42
                  title: Lorem ipsum project
        '403':
          description: >-
            Returned if the client does not have sufficient permissions to see
            the default query.


            **Required permission:** view work packages in the project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not authorized to access this resource.
        '404':
          description: >-
            Returned if the client does not have sufficient permissions to see
            the project.


            **Required permission:** any permission in the project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified resource does not exist.
      summary: View default query for project
      description: >-
        Same as [viewing an existing, persisted Query](#queries-query-get) in
        its response, this resource returns an unpersisted query and by that
        allows to get the default query configuration. The client may also
        provide additional parameters which will modify the default query. The
        query will already be scoped for the project.
      tags:
        - Queries
      parameters:
        - name: id
          in: path
          description: Id of the project the default query is requested for
          required: true
          type: integer
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions. The filters provided as
            parameters are not applied to the query but are instead used to
            override the query's persisted filters. All filters also accepted by
            the work packages endpoint are accepted.
          required: false
          type: string
        - name: offset
          in: query
          description: Page number inside the queries' result collection of work packages.
          required: false
          type: integer
          default: 1
        - name: pageSize
          in: query
          description: >-
            Number of elements to display per page for the queries' result
            collection of work packages.
          required: false
          type: integer
        - name: sortBy
          in: query
          description: >-
            JSON specifying sort criteria. The sort criteria is applied to the
            querie's result collection of work packages overriding the query's
            persisted sort criteria.
          required: false
          type: string
        - name: groupBy
          in: query
          description: >-
            The column to group by. The grouping criteria is applied to the to
            the querie's result collection of work packages overriding the
            query's persisted group criteria.
          required: false
          type: string
        - name: showSums
          in: query
          description: >-
            Indicates whether properties should be summed up if they support it.
            The showSums parameter is applied to the to the querie's result
            collection of work packages overriding the query's persisted sums
            property.
          required: false
          type: boolean
          default: false
        - name: timelineVisible
          in: query
          description: Indicates whether the timeline should be shown.
          required: false
          type: boolean
          default: false
        - name: showHierarchies
          in: query
          description: Indicates whether the hierarchy mode should be enabled.
          required: false
          type: boolean
          default: true
      produces:
        - application/hal+json
  '/api/v3/queries/{id}/star':
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Query
              id: 9
              name: fdsfdsfdsf
              filters:
                - _type: StatusQueryFilter
                  name: Status
                  _links:
                    filter:
                      href: /api/v3/queries/filters/status
                      title: Status
                    operator:
                      href: /api/v3/queries/operators/o
                      title: open
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/status
                    values: []
                - _type: DueDateQueryFilter
                  name: Due date
                  values:
                    - '1'
                  _links:
                    filter:
                      href: /api/v3/queries/filters/dueDate
                      title: Due date
                    operator:
                      href: /api/v3/queries/operators/<t+
                      title: in less than
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/dueDate
              public: false
              sums: false
              starred: true
              _embedded:
                results:
                  _type: WorkPackageCollection
                  total: 234
                  count: 30
                  pageSize: 2
                  offset: 1
                  _embedded:
                    elements:
                      - <--- shortened for brevity --->
                  _links:
                    self:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    jumpTo:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    changeSize:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    createWorkPackage:
                      href: /api/v3/work_packages/form
                      method: post
                    createWorkPackageImmediate:
                      href: /api/v3/work_packages
                      method: post
              _links:
                self:
                  href: /api/v3/queries/9
                  title: fdsfdsfdsf
                results:
                  href: >-
                    /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                columns:
                  - href: /api/v3/queries/columns/id
                    title: ID
                  - href: /api/v3/queries/columns/subject
                    title: Subject
                  - href: /api/v3/queries/columns/type
                    title: Type
                  - href: /api/v3/queries/columns/status
                    title: Status
                  - href: /api/v3/queries/columns/priority
                    title: Priority
                  - href: /api/v3/queries/columns/assignee
                    title: Assignee
                  - href: /api/v3/queries/columns/updated_at
                    title: Updated on
                groupBy:
                  href: null
                  title: null
                sortBy:
                  - href: /api/v3/queries/sort_bys/parent-desc
                    title: Parent (Descending)
                user:
                  href: /api/v3/users/1
                  title: OpenProject Admin
                project:
                  href: /api/v3/projects/3
                  title: copy
        '400':
          description: Occurs when the client did not send an empty request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not empty.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** for own queries none; for public queries:
            manage public queries


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding query.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to star this query.
        '404':
          description: >-
            Returned if the query does not exist or the client does not have
            sufficient permissions to see it.


            **Required condition:** query belongs to user or query is public


            **Required permission:** view work package in queries project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified query does not exist.
      summary: Star query
      description: ''
      tags:
        - Queries
      parameters:
        - name: id
          in: path
          description: Query id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/queries/{id}/unstar':
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Query
              id: 9
              name: fdsfdsfdsf
              filters:
                - _type: StatusQueryFilter
                  name: Status
                  _links:
                    filter:
                      href: /api/v3/queries/filters/status
                      title: Status
                    operator:
                      href: /api/v3/queries/operators/o
                      title: open
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/status
                    values: []
                - _type: DueDateQueryFilter
                  name: Due date
                  values:
                    - '1'
                  _links:
                    filter:
                      href: /api/v3/queries/filters/dueDate
                      title: Due date
                    operator:
                      href: /api/v3/queries/operators/<t+
                      title: in less than
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/dueDate
              public: false
              sums: false
              starred: false
              _embedded:
                results:
                  _type: WorkPackageCollection
                  total: 234
                  count: 30
                  pageSize: 2
                  offset: 1
                  _embedded:
                    elements:
                      - <--- shortened for brevity --->
                  _links:
                    self:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    jumpTo:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    changeSize:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    createWorkPackage:
                      href: /api/v3/work_packages/form
                      method: post
                    createWorkPackageImmediate:
                      href: /api/v3/work_packages
                      method: post
              _links:
                self:
                  href: /api/v3/queries/9
                  title: fdsfdsfdsf
                results:
                  href: >-
                    /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                columns:
                  - href: /api/v3/queries/columns/id
                    title: ID
                  - href: /api/v3/queries/columns/subject
                    title: Subject
                  - href: /api/v3/queries/columns/type
                    title: Type
                  - href: /api/v3/queries/columns/status
                    title: Status
                  - href: /api/v3/queries/columns/priority
                    title: Priority
                  - href: /api/v3/queries/columns/assignee
                    title: Assignee
                  - href: /api/v3/queries/columns/updated_at
                    title: Updated on
                groupBy:
                  href: null
                  title: null
                sortBy:
                  - href: /api/v3/queries/sort_bys/parent-desc
                    title: Parent (Descending)
                user:
                  href: /api/v3/users/1
                  title: OpenProject Admin
                project:
                  href: /api/v3/projects/3
                  title: copy
        '400':
          description: Occurs when the client did not send an empty request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not empty.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** for own queries none; for public queries:
            manage public queries


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding query.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to unstar this query.
        '404':
          description: >-
            Returned if the query does not exist or the client does not have
            sufficient permissions to see it.


            **Required condition:** query belongs to user or query is public


            **Required permission:** view work package in queries project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified query does not exist.
      summary: Unstar query
      description: ''
      tags:
        - Queries
      parameters:
        - name: id
          in: path
          description: Query id
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/queries:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/queries
              total: 1
              count: 1
              _type: Collection
              _embedded:
                elements:
                  - _type: Query
                    id: 9
                    name: fdsfdsfdsf
                    filters:
                      - _type: StatusQueryFilter
                        name: Status
                        _links:
                          filter:
                            href: /api/v3/queries/filters/status
                            title: Status
                          operator:
                            href: /api/v3/queries/operators/o
                            title: open
                          schema:
                            href: /api/v3/queries/filter_instance_schemas/status
                          values: []
                      - _type: DueDateQueryFilter
                        name: Due date
                        values:
                          - '1'
                        _links:
                          filter:
                            href: /api/v3/queries/filters/dueDate
                            title: Due date
                          operator:
                            href: /api/v3/queries/operators/<t+
                            title: in less than
                          schema:
                            href: /api/v3/queries/filter_instance_schemas/dueDate
                    public: false
                    sums: false
                    starred: true
                    _embedded:
                      results:
                        _type: WorkPackageCollection
                        total: 234
                        count: 30
                        pageSize: 2
                        offset: 1
                        _embedded:
                          elements:
                            - <--- shortened for brevity --->
                        _links:
                          self:
                            href: >-
                              /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                          jumpTo:
                            href: >-
                              /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          changeSize:
                            href: >-
                              /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          createWorkPackage:
                            href: /api/v3/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/work_packages
                            method: post
                    _links:
                      self:
                        href: /api/v3/queries/9
                        title: fdsfdsfdsf
                      results:
                        href: >-
                          /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      columns:
                        - href: /api/v3/queries/columns/id
                          title: ID
                        - href: /api/v3/queries/columns/subject
                          title: Subject
                        - href: /api/v3/queries/columns/type
                          title: Type
                        - href: /api/v3/queries/columns/status
                          title: Status
                        - href: /api/v3/queries/columns/priority
                          title: Priority
                        - href: /api/v3/queries/columns/assignee
                          title: Assignee
                        - href: /api/v3/queries/columns/updated_at
                          title: Updated on
                      groupBy:
                        href: null
                        title: null
                      sortBy:
                        - href: /api/v3/queries/sort_bys/parent-desc
                          title: Parent (Descending)
                      user:
                        href: /api/v3/users/1
                        title: OpenProject Admin
                      project:
                        href: /api/v3/projects/3
                        title: copy
        '403':
          description: >-
            Returned if the client does not have sufficient permissions to see
            queries.


            **Required permission:** view work packages or manage public queries
            in any project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to see the queries.
      summary: List queries
      description: >-
        Returns a collection of queries. The collection can be filtered via
        query parameters similar to how work packages are filtered. Please note
        however, that the filters are applied to the queries and not to the work
        packages the queries in turn might return.
      tags:
        - Queries
      parameters:
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions.

            Accepts the same format as returned by the [queries](#queries)
            endpoint.

            Currently supported filters are:


            + project: filters queries by the project they are assigned to. If
            the project filter is passed with the `!*` (not any) operator,
            global queries are returned.
          required: false
          type: string
      produces:
        - application/hal+json
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/hal+json:
              _type: Query
              id: 9
              name: fdsfdsfdsf
              filters:
                - _type: StatusQueryFilter
                  name: Status
                  _links:
                    filter:
                      href: /api/v3/queries/filters/status
                      title: Status
                    operator:
                      href: /api/v3/queries/operators/o
                      title: open
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/status
                    values: []
                - _type: DueDateQueryFilter
                  name: Due date
                  values:
                    - '1'
                  _links:
                    filter:
                      href: /api/v3/queries/filters/dueDate
                      title: Due date
                    operator:
                      href: /api/v3/queries/operators/<t+
                      title: in less than
                    schema:
                      href: /api/v3/queries/filter_instance_schemas/dueDate
              public: false
              sums: false
              starred: false
              _embedded:
                results:
                  _type: WorkPackageCollection
                  total: 234
                  count: 30
                  pageSize: 2
                  offset: 1
                  _embedded:
                    elements:
                      - <--- shortened for brevity --->
                  _links:
                    self:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    jumpTo:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    changeSize:
                      href: >-
                        /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      templated: true
                    createWorkPackage:
                      href: /api/v3/work_packages/form
                      method: post
                    createWorkPackageImmediate:
                      href: /api/v3/work_packages
                      method: post
              _links:
                self:
                  href: /api/v3/queries/9
                  title: fdsfdsfdsf
                results:
                  href: >-
                    /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                columns:
                  - href: /api/v3/queries/columns/id
                    title: ID
                  - href: /api/v3/queries/columns/subject
                    title: Subject
                  - href: /api/v3/queries/columns/type
                    title: Type
                  - href: /api/v3/queries/columns/status
                    title: Status
                  - href: /api/v3/queries/columns/priority
                    title: Priority
                  - href: /api/v3/queries/columns/assignee
                    title: Assignee
                  - href: /api/v3/queries/columns/updated_at
                    title: Updated on
                groupBy:
                  href: null
                  title: null
                sortBy:
                  - href: /api/v3/queries/sort_bys/parent-desc
                    title: Parent (Descending)
                user:
                  href: /api/v3/users/1
                  title: OpenProject Admin
                project:
                  href: /api/v3/projects/3
                  title: copy
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '422':
          description: >-
            Returned if:


            * the client tries to modify a read-only property
            (`PropertyIsReadOnly`)


            * a constraint for a property was violated
            (`PropertyConstraintViolation`)


            * the client provides a link to an invalid resource
            (`ResourceTypeMismatch`),
              e.g. a user, project or operator not found
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: Project not found
              _embedded:
                details:
                  attribute: project
      summary: Create query
      description: >-
        When calling this endpoint the client provides a single object,
        containing at least the properties and links that are required, in the
        body.

        The required fields of a Query can be found in its schema, which is
        embedded in the respective form.

        Note that it is only allowed to provide properties or links supporting
        the write operation.
      tags:
        - Queries
      parameters: []
      produces:
        - application/hal+json
  /api/v3/queries/form:
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/example/form
                validate:
                  href: /api/v3/example/form
                  method: POST
                previewMarkup:
                  href: /api/v3/render/textile
                  method: POST
                commit:
                  href: /api/v3/example
                  method: PATCH
              _type: Form
              _embedded:
                payload:
                  _links:
                    status:
                      href: /api/v3/statuses/1
                  _type: Example
                  lockVersion: 5
                  subject: An example title
                schema:
                  _type: Schema
                  _links:
                    self:
                      href: /api/v3/example/schema
                  lockVersion:
                    type: Integer
                    writable: false
                  subject:
                    type: String
                    minLength: 1
                    maxLength: 255
                  status:
                    _links:
                      allowedValues:
                        - href: /api/v3/statuses/1
                          title: New
                        - href: /api/v3/statuses/2
                          title: Closed
                    type: Status
                    _embedded:
                      allowedValues:
                        - _links:
                            self:
                              href: /api/v3/statuses/1
                          _type: Status
                          id: 1
                          name: New
                          position: 1
                          isDefault: true
                          isClosed: false
                          defaultDoneRatio: 0
                          createdAt: '2014-05-21T08:51:20Z'
                          updatedAt: '2014-05-21T09:12:00Z'
                        - _links:
                            self:
                              href: /api/v3/statuses/2
                          _type: Status
                          id: 2
                          name: Closed
                          position: 2
                          isDefault: false
                          isClosed: true
                          defaultDoneRatio: 100
                          createdAt: '2014-05-21T08:51:20Z'
                          updatedAt: '2014-05-21T09:12:00Z'
                validationErrors:
                  subject:
                    _type: Error
                    errorIdentifier: 'urn:openproject-org:api:v3:errors:BadExampleError'
                    message: >-
                      For the purpose of this example we need a validation
                      error. The remainder of the response pretends there were
                      no errors.
      summary: Query Create Form
      description: ''
      tags:
        - Queries
      parameters: []
      produces:
        - application/hal+json
  /api/v3/queries/schema:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Schema
              _dependencies: []
              id:
                type: Integer
                name: ID
                required: true
                hasDefault: false
                writable: false
              name:
                type: String
                name: Name
                required: true
                hasDefault: false
                writable: true
                minLength: 1
                maxLength: 255
              user:
                type: User
                name: User
                required: true
                hasDefault: true
                writable: false
              project:
                type: Project
                name: Project
                required: false
                hasDefault: false
                writable: true
                _links: {}
              public:
                type: Boolean
                name: Public
                required: false
                hasDefault: true
                writable: true
              sums:
                type: Boolean
                name: Sums
                required: false
                hasDefault: true
                writable: true
              timelineVisible:
                type: Boolean
                name: Timeline visible
                required: false
                hasDefault: true
                writable: true
              timelineZoomLevel:
                type: String
                name: Timeline zoom level
                required: false
                hasDefault: true
                writable: true
              timelineLabels:
                type: QueryTimelineLabels
                name: Timeline labels
                required: false
                hasDefault: true
                writable: true
              showHierarchies:
                type: Boolean
                name: Show hierarchies
                required: false
                hasDefault: true
                writable: true
              starred:
                type: Boolean
                name: Starred
                required: false
                hasDefault: true
                writable: true
              columns:
                type: '[]QueryColumn'
                name: Columns
                required: false
                hasDefault: true
                writable: true
                _links: {}
              filters:
                type: '[]QueryFilterInstance'
                name: Filters
                required: false
                writable: true
                hasDefault: true
                _links:
                  allowedValuesSchemas:
                    href: /api/v3/queries/filter_instance_schemas
              groupBy:
                type: '[]QueryGroupBy'
                name: Group results by
                required: false
                hasDefault: false
                writable: true
                _links: {}
              sortBy:
                type: '[]QuerySortBy'
                name: Sort by
                required: false
                hasDefault: true
                writable: true
                _links: {}
              results:
                type: WorkPackageCollection
                name: Results
                required: false
                hasDefault: false
                writable: false
              _embedded:
                filtersSchemas:
                  _type: Collection
                  total: 20
                  count: 20
                  _embedded:
                    elements:
                      - _type: QueryFilterInstanceSchema
                        _dependencies:
                          - _type: SchemaDependency
                            'on': operator
                            dependencies:
                              /api/v3/queries/operators/=:
                                values:
                                  type: '[]User'
                                  name: Values
                                  required: true
                                  hasDefault: false
                                  writable: true
                                  _links: {}
                              /api/v3/queries/operators/!:
                                values:
                                  type: '[]User'
                                  name: Values
                                  required: true
                                  hasDefault: false
                                  writable: true
                                  _links: {}
                              /api/v3/queries/operators/!*: {}
                              /api/v3/queries/operators/*: {}
                        name:
                          type: String
                          name: Name
                          required: true
                          hasDefault: true
                          writable: false
                        filter:
                          type: QueryFilter
                          name: Filter
                          required: true
                          hasDefault: false
                          writable: true
                          _links: {}
                        _links:
                          self:
                            href: /api/v3/queries/filter_instance_schemas/assignee
                          filter:
                            href: /api/v3/queries/filters/assignee
                            title: Assignee
                      - _type: QueryFilterInstanceSchema
                        _dependencies:
                          - _type: SchemaDependency
                            'on': operator
                            dependencies:
                              /api/v3/queries/operators/=:
                                values:
                                  type: '[]User'
                                  name: Values
                                  required: true
                                  hasDefault: false
                                  writable: true
                                  _links: {}
                              /api/v3/queries/operators/!:
                                values:
                                  type: '[]User'
                                  name: Values
                                  required: true
                                  hasDefault: false
                                  writable: true
                                  _links: {}
                        name:
                          type: String
                          name: Name
                          required: true
                          hasDefault: true
                          writable: false
                        filter:
                          type: QueryFilter
                          name: Filter
                          required: true
                          hasDefault: false
                          writable: true
                          _links: {}
                        _links:
                          self:
                            href: /api/v3/queries/filter_instance_schemas/author
                          filter:
                            href: /api/v3/queries/filters/author
                            title: Author
                  _links:
                    self:
                      href: /api/v3/queries/filter_instance_schemas
              _links:
                self:
                  href: /api/v3/queries/schema
        '403':
          description: '**Required permission:** view work package in any project'
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not authorized to access this resource.
      summary: View schema for global queries
      description: >-
        Retrieve the schema for global queries, those, that are not assigned to
        a project.
      tags:
        - Queries
      parameters: []
      produces:
        - application/hal+json
  '/api/v3/projects/{id}/queries/schema':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Schema
              _dependencies: []
              id:
                type: Integer
                name: ID
                required: true
                hasDefault: false
                writable: false
              name:
                type: String
                name: Name
                required: true
                hasDefault: false
                writable: true
                minLength: 1
                maxLength: 255
              user:
                type: User
                name: User
                required: true
                hasDefault: true
                writable: false
              project:
                type: Project
                name: Project
                required: false
                hasDefault: false
                writable: true
                _links: {}
              public:
                type: Boolean
                name: Public
                required: false
                hasDefault: true
                writable: true
              sums:
                type: Boolean
                name: Sums
                required: false
                hasDefault: true
                writable: true
              timelineVisible:
                type: Boolean
                name: Timeline visible
                required: false
                hasDefault: true
                writable: true
              timelineZoomLevel:
                type: String
                name: Timeline zoom level
                required: false
                hasDefault: true
                writable: true
              showHierarchies:
                type: Boolean
                name: Show hierarchies
                required: false
                hasDefault: true
                writable: true
              starred:
                type: Boolean
                name: Starred
                required: false
                hasDefault: true
                writable: true
              columns:
                type: '[]QueryColumn'
                name: Columns
                required: false
                hasDefault: true
                writable: true
                _links: {}
              filters:
                type: '[]QueryFilterInstance'
                name: Filters
                required: false
                writable: true
                hasDefault: true
                _links:
                  allowedValuesSchemas:
                    href: /api/v3/projects/42/queries/filter_instance_schemas
              groupBy:
                type: '[]QueryGroupBy'
                name: Group results by
                required: false
                hasDefault: false
                writable: true
                _links: {}
              sortBy:
                type: '[]QuerySortBy'
                name: Sort by
                required: false
                hasDefault: true
                writable: true
                _links: {}
              results:
                type: WorkPackageCollection
                name: Results
                required: false
                hasDefault: false
                writable: false
              _embedded:
                filtersSchemas:
                  _type: Collection
                  total: 20
                  count: 20
                  _embedded:
                    elements:
                      - _type: QueryFilterInstanceSchema
                        _dependencies:
                          - _type: SchemaDependency
                            'on': operator
                            dependencies:
                              /api/v3/queries/operators/=:
                                values:
                                  type: '[]User'
                                  name: Values
                                  required: true
                                  hasDefault: false
                                  writable: true
                                  _links: {}
                              /api/v3/queries/operators/!:
                                values:
                                  type: '[]User'
                                  name: Values
                                  required: true
                                  hasDefault: false
                                  writable: true
                                  _links: {}
                              /api/v3/queries/operators/!*: {}
                              /api/v3/queries/operators/*: {}
                        name:
                          type: String
                          name: Name
                          required: true
                          hasDefault: true
                          writable: false
                        filter:
                          type: QueryFilter
                          name: Filter
                          required: true
                          hasDefault: false
                          writable: true
                          _links: {}
                        _links:
                          self:
                            href: /api/v3/queries/filter_instance_schemas/assignee
                          filter:
                            href: /api/v3/queries/filters/assignee
                            title: Assignee
                      - _type: QueryFilterInstanceSchema
                        _dependencies:
                          - _type: SchemaDependency
                            'on': operator
                            dependencies:
                              /api/v3/queries/operators/=:
                                values:
                                  type: '[]User'
                                  name: Values
                                  required: true
                                  hasDefault: false
                                  writable: true
                                  _links: {}
                              /api/v3/queries/operators/!:
                                values:
                                  type: '[]User'
                                  name: Values
                                  required: true
                                  hasDefault: false
                                  writable: true
                                  _links: {}
                        name:
                          type: String
                          name: Name
                          required: true
                          hasDefault: true
                          writable: false
                        filter:
                          type: QueryFilter
                          name: Filter
                          required: true
                          hasDefault: false
                          writable: true
                          _links: {}
                        _links:
                          self:
                            href: /api/v3/queries/filter_instance_schemas/author
                          filter:
                            href: /api/v3/queries/filters/author
                            title: Author
                  _links:
                    self:
                      href: /api/v3/projects/42/queries/filter_instance_schemas
              _links:
                self:
                  href: /api/v3/projects/42/queries/schema
        '403':
          description: '**Required permission:** view work package in the project'
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not authorized to access this resource.
      summary: View schema for project queries
      description: Retrieve the schema for project queries.
      tags:
        - Queries
      parameters:
        - name: "id"
          in: "path"
          description: "ID of project to return"
          required: true
          type: "integer"
          format: "int64"
      produces:
        - application/hal+json
  /api/v3/queries/available_projects:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work packages
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not authorized to access this resource.
      summary: Available projects
      description: >-
        Gets a list of projects that are available as projects a query can be
        assigned to.
      tags:
        - Queries
      parameters: []
      produces:
        - application/hal+json
  '/api/v3/queries/columns/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: 'QueryColumn::Property'
              id: priority
              name: Priority
              _links:
                self:
                  href: /api/v3/queries/columns/priority
                  title: Priority
        '403':
          description: >-
            Returned if the client does not have sufficient permissions to see
            it.


            **Required permission:** view work package in any project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:Unauthenticated'
              message: You are not authorized to access this resource.
        '404':
          description: Returned if the QueryColumn does not exist.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified query does not exist.
      summary: View Query Column
      description: Retreive an individual QueryColumn as identified by the `id` parameter.
      tags:
        - Query Columns
      parameters:
        - name: id
          in: path
          description: QueryColumn id
          required: true
          type: string
      produces:
        - application/hal+json
  '/api/v3/queries/filters/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: QueryFilter
              id: status
              _links:
                self:
                  href: /api/v3/queries/filters/status
                  title: Status
        '403':
          description: >-
            Returned if the client does not have sufficient permissions to see
            it.


            **Required permission:** view work package in any project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:Unauthenticated'
              message: You are not authorized to access this resource.
        '404':
          description: Returned if the QueryFilter does not exist.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified query does not exist.
      summary: View Query Filter
      description: Retreive an individual QueryFilter as identified by the id parameter.
      tags:
        - Query Filters
      parameters:
        - name: id
          in: path
          description: QueryFilter identifier.
          required: true
          type: string
      produces:
        - application/hal+json
  '/api/v3/queries/operators/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: QueryOperator
              id: '!'
              name: is not
              _links:
                self:
                  href: /api/v3/queries/operators/!
                  title: is not
        '403':
          description: >-
            Returned if the client does not have sufficient permissions to see
            it.


            **Required permission:** view work package in any project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:Unauthenticated'
              message: You are not authorized to access this resource.
        '404':
          description: Returned if the QueryOperator does not exist.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified query does not exist.
      summary: View Query Operator
      description: >-
        Retreive an individual QueryOperator as identified by the `id`
        parameter.
      tags:
        - Query Operators
      parameters:
        - name: id
          in: path
          description: QueryOperator id
          required: true
          type: string
      produces:
        - application/hal+json
  '/api/v3/queries/sort_bys/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: QuerySortBy
              id: status-asc
              name: Status (Ascending)
              _links:
                self:
                  href: /api/v3/queries/sort_bys/status-asc
                  title: Status (Ascending)
                column:
                  href: /api/v3/queries/columns/status
                  title: Status
                direction:
                  href: 'urn:openproject-org:api:v3:queries:directions:asc'
                  title: Ascending
        '403':
          description: >-
            Returned if the client does not have sufficient permissions to see
            it.


            **Required permission:** view work package in any project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:Unauthenticated'
              message: You are not authorized to access this resource.
        '404':
          description: Returned if the QuerySortBy does not exist.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified query does not exist.
      summary: View Query Sort By
      description: Retreive an individual QuerySortBy as identified by the id parameter.
      tags:
        - Query Sort Bys
      parameters:
        - name: id
          in: path
          description: >-
            QuerySortBy identifier. The identifier is a combination of the
            column identifier and the direction.
          required: true
          type: string
      produces:
        - application/hal+json
  '/api/v3/queries/filter_instance_schemas/{identifier}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: QueryFilterInstanceSchema
              _dependencies:
                - _type: SchemaDependency
                  'on': operator
                  dependencies:
                    /api/v3/queries/operators/=:
                      values:
                        type: '[]User'
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!:
                      values:
                        type: '[]User'
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
              name:
                type: String
                name: Name
                required: true
                hasDefault: true
                writable: false
              filter:
                type: QueryFilter
                name: Filter
                required: true
                hasDefault: false
                writable: true
                _links: {}
              _links:
                self:
                  href: /api/v3/queries/filter_instance_schemas/author
                filter:
                  href: /api/v3/queries/filters/author
                  title: Author
        '403':
          description: >-
            Returned if the client does not have sufficient permissions to see
            it.


            **Required permission:** view work package in any project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:Unauthenticated'
              message: You are not authorized to access this resource.
        '404':
          description: Returned if the QueryFilterInstanceSchema does not exist.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified query does not exist.
      summary: View Query Filter Instance Schema
      description: >-
        Retreive an individual QueryFilterInstanceSchema as identified by the id
        parameter.
      tags:
        - Query Filter Instance Schema
      parameters:
        - name: identifier
          in: path
          description: >-
            QueryFilterInstanceSchema identifier. The identifier is the filter
            identifier.
          required: true
          type: string
      produces:
        - application/hal+json
  /api/v3/queries/filter_instance_schemas:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Collection
              total: 2
              count: 2
              _embedded:
                elements:
                  - _type: QueryFilterInstanceSchema
                    _dependencies:
                      - _type: SchemaDependency
                        'on': operator
                        dependencies:
                          /api/v3/queries/operators/=:
                            values:
                              type: '[]User'
                              name: Values
                              required: true
                              hasDefault: false
                              writable: true
                              _links: {}
                          /api/v3/queries/operators/!:
                            values:
                              type: '[]User'
                              name: Values
                              required: true
                              hasDefault: false
                              writable: true
                              _links: {}
                          /api/v3/queries/operators/!*: {}
                          /api/v3/queries/operators/*: {}
                    name:
                      type: String
                      name: Name
                      required: true
                      hasDefault: true
                      writable: false
                    filter:
                      type: QueryFilter
                      name: Filter
                      required: true
                      hasDefault: false
                      writable: true
                      _links: {}
                    _links:
                      self:
                        href: /api/v3/queries/filter_instance_schemas/assignee
                      filter:
                        href: /api/v3/queries/filters/assignee
                        title: Assignee
                  - _type: QueryFilterInstanceSchema
                    _dependencies:
                      - _type: SchemaDependency
                        'on': operator
                        dependencies:
                          /api/v3/queries/operators/=:
                            values:
                              type: '[]User'
                              name: Values
                              required: true
                              hasDefault: false
                              writable: true
                              _links: {}
                          /api/v3/queries/operators/!:
                            values:
                              type: '[]User'
                              name: Values
                              required: true
                              hasDefault: false
                              writable: true
                              _links: {}
                    name:
                      type: String
                      name: Name
                      required: true
                      hasDefault: true
                      writable: false
                    filter:
                      type: QueryFilter
                      name: Filter
                      required: true
                      hasDefault: false
                      writable: true
                      _links: {}
                    _links:
                      self:
                        href: /api/v3/queries/filter_instance_schemas/author
                      filter:
                        href: /api/v3/queries/filters/author
                        title: Author
              _links:
                self:
                  href: /api/v3/queries/filter_instance_schemas
        '403':
          description: >-
            Returned if the client does not have sufficient permissions to see
            it.


            **Required permission:** view work package in any project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:Unauthenticated'
              message: You are not authorized to access this resource.
      summary: List Query Filter Instance Schemas
      description: >-
        Returns the list of QueryFilterInstanceSchemas defined for a global
        query. That is a query not assigned to a project.
      tags:
        - Query Filter Instance Schema
      parameters: []
      produces:
        - application/hal+json
  '/api/v3/projects/{id}/queries/filter_instance_schemas':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Collection
              total: 2
              count: 2
              _embedded:
                elements:
                  - _type: QueryFilterInstanceSchema
                    _dependencies:
                      - _type: SchemaDependency
                        'on': operator
                        dependencies:
                          /api/v3/queries/operators/=:
                            values:
                              type: '[]User'
                              name: Values
                              required: true
                              hasDefault: false
                              writable: true
                              _links: {}
                          /api/v3/queries/operators/!:
                            values:
                              type: '[]User'
                              name: Values
                              required: true
                              hasDefault: false
                              writable: true
                              _links: {}
                          /api/v3/queries/operators/!*: {}
                          /api/v3/queries/operators/*: {}
                    name:
                      type: String
                      name: Name
                      required: true
                      hasDefault: true
                      writable: false
                    filter:
                      type: QueryFilter
                      name: Filter
                      required: true
                      hasDefault: false
                      writable: true
                      _links: {}
                    _links:
                      self:
                        href: /api/v3/queries/filter_instance_schemas/assignee
                      filter:
                        href: /api/v3/queries/filters/assignee
                        title: Assignee
                  - _type: QueryFilterInstanceSchema
                    _dependencies:
                      - _type: SchemaDependency
                        'on': operator
                        dependencies:
                          /api/v3/queries/operators/=:
                            values:
                              type: '[]User'
                              name: Values
                              required: true
                              hasDefault: false
                              writable: true
                              _links: {}
                          /api/v3/queries/operators/!:
                            values:
                              type: '[]User'
                              name: Values
                              required: true
                              hasDefault: false
                              writable: true
                              _links: {}
                    name:
                      type: String
                      name: Name
                      required: true
                      hasDefault: true
                      writable: false
                    filter:
                      type: QueryFilter
                      name: Filter
                      required: true
                      hasDefault: false
                      writable: true
                      _links: {}
                    _links:
                      self:
                        href: /api/v3/queries/filter_instance_schemas/author
                      filter:
                        href: /api/v3/queries/filters/author
                        title: Author
              _links:
                self:
                  href: /api/v3/projects/42/queries/filter_instance_schemas
        '403':
          description: >-
            Returned if the client does not have sufficient permissions to see
            it.


            **Required permission:** view work package in any project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:Unauthenticated'
              message: You are not authorized to access this resource.
      summary: List Query Filter Instance Schemas for Project
      description: >-
        Returns the list of QueryFilterInstanceSchemas defined for a query of
        the specified project.
      tags:
        - Query Filter Instance Schema
      parameters:
        - name: id
          in: path
          description: Id of the project.
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/relations/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/relations/1
                update:
                  href: /api/v3/relations/1/form
                  method: POST
                updateImmediately:
                  href: /api/v3/relations/1
                  method: PATCH
                delete:
                  href: /api/v3/relations/1
                  method: DELETE
                from:
                  href: /api/v3/work_packages/42
                  title: Steel Delivery
                to:
                  href: /api/v3/work_packages/84
                  title: Bending the steel
              _type: Relation
              id: 1
              name: precedes
              type: precedes
              reverseType: follows
              description: We can't bend the steel before it's been delivered!
              delay: 0
        '404':
          description: >-
            Returned if the relation does not exist or the client does not have
            sufficient permissions to see it.


            **Required permission:** view work packages for the involved work
            packages
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified relation does not exist.
      summary: View Relation
      description: ''
      tags:
        - Relations
      parameters:
        - name: id
          in: path
          description: Relation id
          required: true
          type: integer
      produces:
        - application/hal+json
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/relations/1
                update:
                  href: /api/v3/relations/1/form
                  method: POST
                updateImmediately:
                  href: /api/v3/relations/1
                  method: PATCH
                delete:
                  href: /api/v3/relations/1
                  method: DELETE
                from:
                  href: /api/v3/work_packages/42
                  title: Steel Delivery
                to:
                  href: /api/v3/work_packages/84
                  title: Bending the steel
              _type: Relation
              id: 1
              name: precedes
              type: precedes
              reverseType: follows
              description: We can't bend the steel before it's been delivered!
              delay: 0
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '404':
          description: >-
            Returned if the relation does not exist or the client does not have
            sufficient permissions to see it.


            **Required permission:** manage work package relations
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified relation does not exist.
        '422':
          description: >-
            Returned if:


            * the client tries to modify a read-only property
            (`PropertyIsReadOnly`)


            * a constraint for a property was violated
            (`PropertyConstraintViolation`)


            * the client provides a link to an invalid resource
            (`ResourceTypeMismatch`) or a
              work package that does not exist or for which the client does not have sufficient permissions
              to see it (**required permissions**: `view work packages` for the involved work packages).
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: Delay must be a number greater than or equal to 0
              _embedded:
                details:
                  attribute: delay
      summary: Edit Relation
      description: >-
        When calling this endpoint the client provides a single object,
        containing the properties and links that it wants to change, in the
        body.

        It is only allowed to provide properties or links supporting the
        **write** operation.


        Note that changing the `type` of a relation invariably also changes the
        respective `reverseType` as well as the "name" of it.

        The returned Relation object will reflect that change. For instance if
        you change a Relation's

        `type` to "follows" then the `reverseType` will be changed to
        `precedes`.
      tags:
        - Relations
      parameters:
        - name: id
          in: path
          description: Relation ID
          required: true
          type: integer
      produces:
        - application/hal+json
    delete:
      responses:
        '204':
          description: |-
            Returned if the relation was deleted successfully.
            The response body is empty.
          headers: {}
          examples: {}
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage work package relations
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to delete this relation.
        '404':
          description: >-
            Returned if the relation does not exist or the client does not have
            sufficient permissions to see it.


            **Required permission:** manage work package relations
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified relation does not exist.
      summary: Delete Relation
      description: Deletes the relation.
      tags:
        - Relations
      parameters:
        - name: id
          in: path
          description: Relation ID
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/relations/schema:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Schema
              _links:
                self:
                  href: /api/v3/relations/schema
              id:
                name: ID
                type: Integer
                writable: false
              type:
                name: Type
                type: String
                writable: true
              reverseType:
                name: Reverse Type
                type: String
                writable: false
              description:
                name: Description
                type: String
                writable: true
              from:
                name: From work package
                type: WorkPackage
                writable: false
              to:
                name: To work package
                type: WorkPackage
                writable: false
              delay:
                name: Delay
                type: Integer
                writable: true
      summary: View relation schema
      description: ''
      tags:
        - Relations
      parameters: []
      produces:
        - application/hal+json
  '/api/v3/relations/schema/{type}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Schema
              _links:
                self:
                  href: /api/v3/relations/schema
              id:
                name: ID
                type: Integer
                writable: false
              type:
                name: Type
                type: String
                writable: true
              reverseType:
                name: Reverse Type
                type: String
                writable: false
              description:
                name: Description
                type: String
                writable: true
              from:
                name: From work package
                type: WorkPackage
                writable: false
              to:
                name: To work package
                type: WorkPackage
                writable: false
              delay:
                name: Delay
                type: Integer
                writable: true
        '404':
          description: >-
            Returned if the relation type does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** manage work package relations
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified relation type does not exist.
      summary: View relation schema for type
      description: ''
      tags:
        - Relations
      parameters:
        - name: type
          in: path
          description: Type of the schema
          required: true
          type: string
      produces:
        - application/hal+json
  /api/v3/relations:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/relations
              total: 3
              count: 1
              _type: Collection
              _embedded:
                elements:
                  - _links:
                      self:
                        href: /api/v3/relations/1
                      update:
                        href: /api/v3/relations/1/form
                        method: POST
                      updateImmediately:
                        href: /api/v3/relations/1
                        method: PATCH
                      delete:
                        href: /api/v3/relations/1
                        method: DELETE
                      from:
                        href: /api/v3/work_packages/42
                        title: Steel Delivery
                      to:
                        href: /api/v3/work_packages/84
                        title: Bending the steel
                    _type: Relation
                    id: 1
                    name: precedes
                    type: precedes
                    reverseType: follows
                    description: We can't bend the steel before it's been delivered!
                    delay: 0
      summary: List Relations
      description: >-
        Lists all relations according to the given (optional, logically
        conjunctive) filters and ordered by ID.

        The response only includes relations between work packages which the
        user is allowed to see.
      tags:
        - Relations
      parameters:
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions.

            Accepts the same format as returned by the [queries](#queries)
            endpoint. Valid fields to filter by are:


            + id - ID of relation


            + from - ID of work package from which the filtered relations
            emanates.


            + to - ID of work package to which this related points.


            + involved - ID of either the `from` or the `to` work package.


            + type - The type of relation to filter by, e.g. "follows".
          required: false
          type: string
        - name: sortBy
          in: query
          description: >-
            JSON specifying sort criteria.

            Accepts the same format as returned by the [queries](#queries)
            endpoint.
          required: false
          type: string
      produces:
        - application/hal+json
  '/api/v3/relations/{id}/form':
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/relations/form
                validate:
                  href: /api/v3/relations/form
                  method: POST
                commit:
                  href: /api/v3/relations
                  method: PATCH
              _type: Form
              _embedded:
                payload:
                  _links:
                    from:
                      href: /api/v3/work_packages/4534
                    to:
                      href: /api/v3/work_packages/3857
                  _type: WorkPackage
                  type: follows
                  delay: 3
                  description: let it rest for 3 days
                schema:
                  _type: Schema
                  _links:
                    self:
                      href: /api/v3/relations/schema
                  id:
                    name: ID
                    type: Integer
                    writable: false
                  type:
                    name: Type
                    type: String
                    writable: true
                    allowedValues:
                      - relates
                      - duplicates
                      - duplicated
                      - blocks
                      - blocked
                      - precedes
                      - follows
                      - includes
                      - partof
                      - requires
                      - required
                  reverseType:
                    name: Reverse Type
                    type: String
                    writable: false
                  description:
                    name: Description
                    type: String
                    writable: true
                  from:
                    name: From work package
                    type: WorkPackage
                    writeable: false
                  to:
                    name: To work package
                    type: WorkPackage
                    writable: false
                  delay:
                    name: Delay
                    type: Integer
                    writable: true
                validationErrors:
                  from:
                    _type: Error
                    errorIdentifier: 'urn:openproject-org:api:v3:errors:BadExampleError'
                    message: >-
                      For the purpose of this example we need a validation
                      error. The remainder of the response pretends there were
                      no errors.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** manage work package relations


            *Note that you will only receive this error, if you are at least
            allowed to see the involved work packages.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to edit the specified relation.
        '404':
          description: >-
            Returned if the relation does not exist or the client does not have
            sufficient permissions to see it.


            **Required permission:** view (involved) work package(s), manage
            work package relations
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified relation does not exist.
      summary: Relation edit form
      description: ''
      tags:
        - Relations
      parameters:
        - name: id
          in: path
          description: ID of the relation being modified
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/render/textile:
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            text/html: >
              <p>Hello world! <a href="http://example.com">This</a>
              <strong>is</strong> textile!</p>
        '400':
          description: >-
            Returned if the context passed by the client is not valid (e.g.
            unknown).


            Note that this response will also occur when the requesting user

            is not allowed to see the context resource (e.g. limited work
            package visibility).
          headers: {}
          examples:
            application/json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRenderContext'
              message: Could not render textile string in the given context.
        '415':
          description: >-
            Returned if the Content-Type indicated in the request is not
            `text/plain`.
          headers: {}
          examples:
            application/json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:TypeNotSupported'
              message: >-
                Expected Content-Type to be 'text/plain' but got
                'application/json'.
      summary: Preview Textile document
      description: ''
      tags:
        - Previewing
      parameters:
        - name: context
          in: query
          description: >-
            API-Link to the context in which the rendering occurs, for example a
            specific work package.


            If left out only context-agnostic rendering takes place.

            Please note that OpenProject features textile-extensions that can
            only work given a context (e.g. display attached images).


            **Supported contexts:**


            * `/api/v3/work_packages/{id}` - an existing work package
          required: false
          type: string
      produces:
        - text/html
        - application/json
  /api/v3/render/plain:
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            text/html: |
              <p>Hello world! This *is* plain text!</p>
        '415':
          description: >-
            Returned if the Content-Type indicated in the request is not
            `text/plain`.
          headers: {}
          examples:
            application/json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:TypeNotSupported'
              message: >-
                Expected Content-Type to be 'text/plain' but got
                'application/json'.
      summary: Preview plain document
      description: ''
      tags:
        - Previewing
      parameters: []
      produces:
        - text/html
        - application/json
  '/api/v3/revisions/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '404':
          description: >-
            Returned if the revision does not exist or the client does not have
            sufficient permissions

            to see it.


            **Required permission:** view changesets for the project the
            repository is created in.


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of a revision.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified revision does not exist.
      summary: View revision
      description: ''
      tags:
        - Revisions
      parameters:
        - name: id
          in: path
          description: Revision id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/roles/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Role
              id: 3
              name: Manager
              _links:
                self:
                  href: /api/v3/roles/3
                  title: Manager
      summary: View role
      description: Fetch an individual role.
      tags:
        - Roles
      parameters:
        - name: id
          in: path
          description: role id
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/roles:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Collection
              total: 5
              count: 5
              _embedded:
                elements:
                  - _type: Role
                    id: 3
                    name: Manager
                    _links:
                      self:
                        href: /api/v3/roles/3
                        title: Manager
                  - _type: Role
                    id: 2
                    name: Anonymous
                    _links:
                      self:
                        href: /api/v3/roles/2
                        title: Anonymous
                  - _type: Role
                    id: 5
                    name: Reader
                    _links:
                      self:
                        href: /api/v3/roles/5
                        title: Reader
                  - _type: Role
                    id: 4
                    name: Member
                    _links:
                      self:
                        href: /api/v3/roles/4
                        title: Member
                  - _type: Role
                    id: 1
                    name: Non member
                    _links:
                      self:
                        href: /api/v3/roles/1
                        title: Non member
              _links:
                self:
                  href: /api/v3/roles
      summary: List roles
      description: >-
        List all defined roles. This includes built in roles like 'Anonymous'
        and 'Non member'.
      tags:
        - Roles
      parameters: []
      produces:
        - application/hal+json
  /api/v3:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Root"
          examples: {}
      summary: View root
      description: ''
      tags:
        - Root
      parameters: []
  /api/v3/example/schema:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Schema
              _dependencies: []
              _links:
                self:
                  href: /api/v3/example/schema
              lockVersion:
                name: Resource Version
                type: Integer
                writable: false
              subject:
                name: Subject
                type: String
                minLength: 1
                maxLength: 255
              status:
                _links:
                  allowedValues:
                    - href: /api/v3/statuses/1
                      title: New
                    - href: /api/v3/statuses/2
                      title: Closed
                name: Status
                type: Status
                _embedded:
                  allowedValues:
                    - _links:
                        self:
                          href: /api/v3/statuses/1
                      _type: Status
                      id: 1
                      name: New
                      position: 1
                      isDefault: true
                      isClosed: false
                      defaultDoneRatio: 0
                      createdAt: '2014-05-21T08:51:20Z'
                      updatedAt: '2014-05-21T09:12:00Z'
                    - _links:
                        self:
                          href: /api/v3/statuses/2
                      _type: Status
                      id: 2
                      name: Closed
                      position: 2
                      isDefault: false
                      isClosed: true
                      defaultDoneRatio: 100
                      createdAt: '2014-05-21T08:51:20Z'
                      updatedAt: '2014-05-21T09:12:00Z'
      summary: view the schema
      description: >-
        This is an example of how a schema might look like. Note that this
        endpoint does not exist in the actual implementation.
      tags:
        - Schemas
      parameters: []
      produces:
        - application/hal+json
  /api/v3/statuses:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/statuses
              total: 6
              count: 6
              _type: Collection
              _embedded:
                elements:
                  - _links:
                      self:
                        href: /api/v3/statuses/1
                    _type: Status
                    id: 1
                    name: New
                    position: 1
                    isDefault: true
                    isClosed: false
                    defaultDoneRatio: 0
                  - _links:
                      self:
                        href: /api/v3/statuses/3
                    _type: Status
                    id: 3
                    name: Resolved
                    position: 3
                    isDefault: false
                    isClosed: false
                    defaultDoneRatio: 75
                  - _links:
                      self:
                        href: /api/v3/statuses/4
                    _type: Status
                    id: 4
                    name: Feedback
                    position: 4
                    isDefault: false
                    isClosed: false
                    defaultDoneRatio: 25
                  - _links:
                      self:
                        href: /api/v3/statuses/5
                    _type: Status
                    id: 5
                    name: Closed
                    position: 5
                    isDefault: false
                    isClosed: true
                    defaultDoneRatio: 100
                  - _links:
                      self:
                        href: /api/v3/statuses/6
                    _type: Status
                    id: 6
                    name: Rejected
                    position: 6
                    isDefault: false
                    isClosed: true
                    defaultDoneRatio: 100
                  - _links:
                      self:
                        href: /api/v3/statuses/2
                    _type: Status
                    id: 2
                    name: In Progress
                    position: 3
                    isDefault: false
                    isClosed: false
                    defaultDoneRatio: 50
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to see the statuses.
      summary: List all Statuses
      description: ''
      tags:
        - Statuses
      parameters: []
      produces:
        - application/hal+json
  '/api/v3/statuses/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/statuses/1
              _type: Status
              id: 1
              name: New
              position: 1
              isDefault: true
              isClosed: false
              defaultDoneRatio: 0
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to see this status.
      summary: View Status
      description: ''
      tags:
        - Statuses
      parameters:
        - name: id
          in: path
          description: status id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/string_objects':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/string_objects?value=Foo
              _type: StringObject
              value: Foo
      summary: View String Object
      description: ''
      tags:
        - String Objects
      parameters:
        - name: value
          in: query
          description: The string value being resolved
          required: true
          type: string
      produces:
        - application/hal+json
  '/api/v3/time_entries/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
          schema:
            $ref: "#/definitions/Time%20entry"
        '404':
          description: >-
            Returned if the time entry does not exist or if the user does not
            have permission to view them.


            **Required permission** `view time entries` in the project the time
            entry is assigned to
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The requested resource could not be found.
      summary: View time entry
      description: ''
      tags:
        - Time Entries
      parameters:
        - name: id
          in: path
          description: time entry id
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/time_entries:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Time%20entries"
          examples:
            application/hal+json:
              _type: Collection
              total: 39
              count: 2
              pageSize: 2
              offset: 1
              _embedded:
                elements:
                  - _type: TimeEntry
                    id: 5
                    comment: Some comment
                    spentOn: '2015-03-20'
                    hours: PT5H
                    createdAt: '2015-03-20T12:56:56Z'
                    updatedAt: '2015-03-20T12:56:56Z'
                    _links:
                      self:
                        href: /api/v3/time_entries/1
                      project:
                        href: /api/v3/projects/1
                        title: Some project
                      workPackage:
                        href: /api/v3/work_packages/1
                        title: Some work package
                      user:
                        href: /api/v3/users/2
                        title: Some user
                      activity:
                        href: /api/v3/time_entries/activities/18
                        title: Some time entry activity
                  - _type: TimeEntry
                    id: 10
                    comment: Another comment
                    spentOn: '2015-03-21'
                    hours: PT7H
                    createdAt: '2015-03-20T12:56:56Z'
                    updatedAt: '2015-03-20T12:56:56Z'
                    _links:
                      self:
                        href: /api/v3/time_entries/2
                      project:
                        href: /api/v3/projects/42
                        title: Some other project
                      workPackage:
                        href: /api/v3/work_packages/541
                        title: Some other work package
                      user:
                        href: /api/v3/users/6
                        title: Some other project
                      activity:
                        href: /api/v3/time_entries/activities/14
                        title: some other time entry activity
              _links:
                self:
                  href: /api/v3/time_entries?offset=1&pageSize=2
                jumpTo:
                  href: /api/v3/time_entries?offset=%7Boffset%7D&pageSize=2
                  templated: true
                changeSize:
                  href: /api/v3/time_entries?offset=1&pageSize=%7Bsize%7D
                  templated: true
                nextByOffset:
                  href: /api/v3/time_entries?offset=2&pageSize=2
        '400':
          description: Returned if the client sends invalid request parameters e.g. filters
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidQuery'
              message:
                - Filters Invalid filter does not exist.
        '403':
          description: Returned if the client is not logged in and login is required.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not authorized to view this resource.
      summary: List Time entries
      description: >-
        Lists time entries. The time entries returned depend on the filters
        provided and also on the permission of the requesting user.
      tags:
        - Time Entries
      parameters:
        - name: offset
          in: query
          description: Page number inside the requested collection.
          required: false
          type: integer
          default: 1
        - name: pageSize
          in: query
          description: Number of elements to display per page.
          required: false
          type: integer
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions.

            Accepts the same format as returned by the [queries](#queries)
            endpoint. Currently supported filters are:


            + work_package: Filter time entries by work package


            + project: Filter time entries by project


            + user: Filter time entries by users
          required: false
          type: string
      produces:
        - application/hal+json
  '/api/v3/time_entries/activity/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '404':
          description: >-
            Returned if the activity does not exist or if the user does not have
            permission to view them.


            **Required permission** `view time entries`, `log time`, `edit time
            entries`, `edit own time entries` or `manage project activities` in
            any project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The requested resource could not be found.
      summary: View time entries activity
      description: ''
      tags:
        - Time Entry Activities
      parameters:
        - name: id
          in: path
          description: time entries activity id
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/types:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/WPTypes"
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/types
              total: 2
              count: 2
              _type: Collection
              _embedded:
                elements:
                  - _links:
                      self:
                        href: /api/v3/types/1
                    _type: Type
                    id: 1
                    name: Bug
                    color: '#ff0000'
                    position: 1
                    isDefault: true
                    isMilestone: false
                    createdAt: '2014-05-21T08:51:20Z'
                    updatedAt: '2014-05-21T08:51:20Z'
                  - _links:
                      self:
                        href: /api/v3/types/2
                    _type: Type
                    id: 2
                    name: Feature
                    color: '#888'
                    position: 2
                    isDefault: false
                    isMilestone: false
                    createdAt: '2014-05-21T08:51:20Z'
                    updatedAt: '2014-05-21T08:51:20Z'
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** view work package or manage types (on any
            project)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to see the types.
      summary: List all Types
      description: ''
      tags:
        - Types
      parameters: []
      produces:
        - application/hal+json
  '/api/v3/projects/{project_id}/types':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/WPTypes"
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/projects/11/types
              total: 2
              count: 2
              _type: Collection
              _embedded:
                elements:
                  - _links:
                      self:
                        href: /api/v3/types/1
                    _type: Type
                    id: 1
                    name: Bug
                    color: '#ff0000'
                    position: 1
                    isDefault: true
                    isMilestone: false
                    createdAt: '2014-05-21T08:51:20Z'
                    updatedAt: '2014-05-21T08:51:20Z'
                  - _links:
                      self:
                        href: /api/v3/types/2
                    _type: Type
                    id: 2
                    name: Feature
                    color: '#888'
                    position: 2
                    isDefault: false
                    isMilestone: false
                    createdAt: '2014-05-21T08:51:20Z'
                    updatedAt: '2014-05-21T08:51:20Z'
        '404':
          description: >-
            Returned if the project does not exist or the client does not have
            sufficient permissions

            to see it.


            **Required permission:** view work packages **or** manage types (on
            given project)


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of a project.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified project does not exist.
      summary: List types available in a project
      description: This endpoint lists the types that are *available* in a given project.
      tags:
        - Types
      parameters:
        - name: project_id
          in: path
          description: ID of the project whoose types will be listed
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/types/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/WPType"
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/types/1
              _type: Type
              id: 1
              name: Bug
              color: '#ff0000'
              position: 1
              isDefault: true
              isMilestone: false
              createdAt: '2014-05-21T08:51:20Z'
              updatedAt: '2014-05-21T08:51:20Z'
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** view work package or manage types (on any
            project)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to see this type.
      summary: View Type
      description: ''
      tags:
        - Types
      parameters:
        - name: id
          in: path
          description: type id
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/my_preferences:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/UserPreferences"
          examples: {}
        '401':
          description: Returned if no user is currently authenticated
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:Unauthenticated'
              message: You need to be authenticated to access this resource.
      summary: Show my preferences
      description: ''
      tags:
        - UserPreferences
      parameters: []
      produces:
        - application/hal+json
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '401':
          description: Returned if no user is currently authenticated
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:Unauthenticated'
              message: You need to be authenticated to access this resource.
        '422':
          description: |-
            Returned if the update contains invalid properties.
            Reasons are:

            * Specifying an invalid type

            * Using an unknown time zone
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: Time zone is not set to one of the allowed values.
      summary: Update UserPreferences
      description: >-
        When calling this endpoint the client provides a single object,
        containing the properties that it wants to change, in the body.
      tags:
        - UserPreferences
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              accessibilityMode:
                type: boolean
              timeZone:
                type: string
      produces:
        - application/hal+json
  '/api/v3/users/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
          schema:
            $ref: "#/definitions/User"
        '404':
          description: >-
            Returned if the user does not exist or if the API user does not have
            permission to view them.


            **Required permission** The user needs to be locked in if the
            installation is configured to pervent anonymous access
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: >-
                The specified user does not exist or you do not have permission
                to view them.
      summary: View user
      description: ''
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: 'User id. Use `me` to reference current user, if any.'
          required: true
          type: string
      produces:
        - application/hal+json
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrators only
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to update the account of this user.
        '404':
          description: >-
            Returned if the user does not exist or if the API user does not have
            the necessary permissions to update it.


            **Required permission:** Administrators only (exception: users may
            update their own accounts)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: >-
                The specified user does not exist or you do not have permission
                to view them.
        '422':
          description: >-
            Returned if:


            * the client tries to modify a read-only property
            (`PropertyIsReadOnly`)


            * a constraint for a property was violated
            (`PropertyConstraintViolation`)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: The email address is already taken.
              _embedded:
                details:
                  attribute: email
      summary: Update user
      description: >-
        Updates the user's writable attributes.

        When calling this endpoint the client provides a single object,
        containing at least the properties and links that are required, in the
        body.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: integer
        - name: body
          in: body
          schema:
            type: object
            properties:
              login:
                type: string
              email:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              admin:
                type: boolean
              language:
                type: string
      produces:
        - application/hal+json
    delete:
      responses:
        '202':
          description: >-
            Returned if the account was deleted successfully.


            Note that the response body is empty as of now. In future versions
            of the API a body

            *might* be returned, indicating the progress of deletion.
          headers: {}
          examples: {}
        '403':
          description: >-
            Returned if the client does not have sufficient permissions or if
            deletion of users was disabled in the instance wide settings.


            **Required permission:** Administrators only (exception: users might
            be able to delete their own accounts)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to delete the account of this user.
        '404':
          description: Returned if the user does not exist.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified user does not exist.
      summary: Delete user
      description: Permanently deletes the specified user account.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/users/{id}/lock':
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '400':
          description: >-
            Returned if the client tries to lock a user account whose current
            status does not allow this transition.


            **Required permission:** Administrators only
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidUserStatusTransition'
              message: The current user account status does not allow this operation.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions for
            locking a user.


            **Required permission:** Administrators only
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to lock the account of this user.
        '404':
          description: Returned if the user does not exist.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified user does not exist.
      summary: Set Lock
      description: ''
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: integer
      produces:
        - application/hal+json
    delete:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '400':
          description: >-
            Returned if the client tries to unlock a user account whose current
            status does not allow this transition.


            **Required permission:** Administrators only
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidUserStatusTransition'
              message: The current user account status does not allow this operation.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions for
            unlocking a user.


            **Required permission:** Administrators only
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to unlock the account of this user.
        '404':
          description: Returned if the user does not exist.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified user does not exist.
      summary: Remove Lock
      description: ''
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/users:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
          schema:
            $ref: "#/definitions/Users"
        '400':
          description: Returned if the client sends an unknown sort column.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidQuery'
              message: Unknown sort column.
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to list users.
      summary: List Users
      description: Lists users. Only administrators have permission to do this.
      tags:
        - Users
      parameters:
        - name: offset
          in: query
          description: Page number inside the requested collection.
          required: false
          type: integer
          default: 1
        - name: pageSize
          in: query
          description: Number of elements to display per page.
          required: false
          type: integer
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions.

            Accepts the same format as returned by the [queries](#queries)
            endpoint. Currently supported filters are:


            + status: Status the user has


            + group: Name of the group in which to-be-listed users are members.


            + name: Filter users in whose first or last names, or email
            addresses the given string occurs.


            + login: User's login
          required: false
          type: string
        - name: sortBy
          in: query
          description: >-
            JSON specifying sort criteria.

            Accepts the same format as returned by the [queries](#queries)
            endpoint.
          required: false
          type: string
      produces:
        - application/hal+json
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples: {}
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to create new users.
        '422':
          description: >-
            Returned if:


            * a constraint for a property was violated
            (`PropertyConstraintViolation`)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: The email address is already taken.
              _embedded:
                details:
                  attribute: email
      summary: Create User
      description: >-
        Creates a new user. Only administrators have permission to do so.

        When calling this endpoint the client provides a single object,
        containing at least the properties and links that are required, in the
        body.


        Valid values for `status`:


        1) "active" - In this case a password has to be provided in addition to
        the other attributes.

        2) "invited" - In this case nothing but the email address is required.
        The rest is optional. An invitation will be sent to the user.
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              login:
                type: string
              email:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              admin:
                type: boolean
              language:
                type: string
              status:
                type: string
              password:
                type: string
      produces:
        - application/hal+json
  '/api/v3/versions/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Version"
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/versions/11
                definingProject:
                  href: /api/v3/projects/11
                availableInProjects:
                  href: /api/v3/versions/11/projects
              _type: Version
              id: 11
              name: v3.0 Alpha
              description:
                format: plain
                raw: This version has a description
                html: This version has a description
              startDate: '2014-11-20'
              endDate: null
              status: Open
        '404':
          description: >-
            Returned if the version does not exist or the client does not have
            sufficient permissions

            to see it.


            **Required permission:** view work packages **or** manage versions
            (any project where the version is available)


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of

            a version. That's why a 404 is returned here, even if a 403 might be
            more appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified version does not exist.
      summary: View version
      description: ''
      tags:
        - Versions
      parameters:
        - name: id
          in: path
          description: version id
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/versions:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Versions"
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/versions
              total: 3
              count: 3
              _type: Collection
              _embedded:
                elements:
                  - _links:
                      self:
                        href: /api/v3/versions/11
                      definingProject:
                        href: /api/v3/projects/12
                      availableInProjects:
                        href: /api/v3/versions/11/projects
                    _type: Version
                    id: 11
                    name: v3.0 Alpha
                    description:
                      format: plain
                      raw: This version has a description
                      html: This version has a description
                    startDate: '2014-11-20'
                    endDate: null
                    status: Open
                  - _links:
                      self:
                        href: /api/v3/versions/12
                      definingProject:
                        href: /api/v3/projects/11
                      availableInProjects:
                        href: /api/v3/versions/12/projects
                    _type: Version
                    id: 12
                    name: v2.0
                    description:
                      format: plain
                      raw: ''
                      html: ''
                    startDate: null
                    endDate: null
                    status: Closed
                  - _links:
                      self:
                        href: /api/v3/versions/10
                      definingProject:
                        href: /api/v3/projects/13
                      availableInProjects:
                        href: /api/v3/versions/13/projects
                    _type: Version
                    id: 10
                    name: v1.0
                    description:
                      format: plain
                      raw: ''
                      html: ''
                    startDate: null
                    endDate: null
                    status: Open
      summary: List versions
      description: >-
        Returns a collection of versions. The client can choose to filter the
        versions similar to how work packages are filtered. In addition to the
        provided filters, the server will reduce the result set to only contain
        versions, for which the requesting client has sufficient permissions
        (*view_work_packages*).
      tags:
        - Versions
      parameters:
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions.

            Accepts the same format as returned by the [queries](#queries)
            endpoint.

            Currently supported filters are:


            + sharing: filters versions by how they are shared within the server
            (*none*, *descendants*, *hierarchy*, *tree*, *system*).
          required: false
          type: string
      produces:
        - application/hal+json
  '/api/v3/projects/{project_id}/versions':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Versions"
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/projects/11/versions
              total: 3
              count: 3
              _type: Collection
              _embedded:
                elements:
                  - _links:
                      self:
                        href: /api/v3/versions/11
                      definingProject:
                        href: /api/v3/projects/11
                      availableInProjects:
                        href: /api/v3/versions/11/projects
                    _type: Version
                    id: 11
                    name: v3.0 Alpha
                    description:
                      format: plain
                      raw: This version has a description
                      html: This version has a description
                    startDate: '2014-11-20'
                    endDate: null
                    status: Open
                  - _links:
                      self:
                        href: /api/v3/versions/12
                      definingProject:
                        href: /api/v3/projects/11
                      availableInProjects:
                        href: /api/v3/versions/12/projects
                    _type: Version
                    id: 12
                    name: v2.0
                    description:
                      format: plain
                      raw: ''
                      html: ''
                    startDate: null
                    endDate: null
                    status: Closed
                  - _links:
                      self:
                        href: /api/v3/versions/10
                      definingProject:
                        href: /api/v3/projects/11
                      availableInProjects:
                        href: /api/v3/versions/10/projects
                    _type: Version
                    id: 10
                    name: v1.0
                    description:
                      format: plain
                      raw: ''
                      html: ''
                    startDate: null
                    endDate: null
                    status: Open
        '404':
          description: >-
            Returned if the project does not exist or the client does not have
            sufficient permissions

            to see it.


            **Required permission:** view work packages **or** manage versions
            (on given project)


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of a project.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified project does not exist.
      summary: List versions available in a project
      description: >-
        This endpoint lists the versions that are *available* in a given
        project.

        Note that due to sharing this might be more than the versions *defined*
        by that project.
      tags:
        - Versions
      parameters:
        - name: project_id
          in: path
          description: ID of the project whoose versions will be listed
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/work_packages/{id}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
          schema:
            $ref: "#/definitions/Work%20Package"
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
      summary: View Work Package
      description: ''
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: Work package id
          required: true
          type: integer
      produces:
        - application/hal+json
    patch:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
          schema:
            $ref: '#/definitions/Work%20Package'
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to edit the content of the work package.
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
        '409':
          description: >-
            Returned if the resource was changed since the client requested it.
            This is determined using the `lockVersion` property.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:UpdateConflict'
              message: >-
                Your changes could not be saved, because the work package was
                changed since you've seen it the last time.
        '422':
          description: >-
            Returned if:


            * the client tries to modify a read-only property
            (`PropertyIsReadOnly`)


            * a constraint for a property was violated
            (`PropertyConstraintViolation`)


            * the client provides a link to an invalid resource
            (`ResourceTypeMismatch`)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: The subject might not be blank.
              _embedded:
                details:
                  attribute: Subject
      summary: Edit Work Package
      description: >-
        When calling this endpoint the client provides a single object,
        containing the properties and links that it wants to change, in the
        body.

        Note that it is only allowed to provide properties or links supporting
        the **write** operation.


        Additionally to the fields the client wants to change, it is mandatory
        to provide the value of `lockVersion` which was received

        by the `GET` request this change originates from.


        The value of `lockVersion` is used to implement [optimistic
        locking](http://en.wikipedia.org/wiki/Optimistic_concurrency_control).
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: Work package id
          required: true
          type: integer
        - name: notify
          in: query
          description: >-
            Indicates whether change notifications (e.g. via E-Mail) should be
            sent.

            Note that this controls notifications for all users interested in
            changes to the work package (e.g. watchers, author and assignee),

            not just the current user.
          required: false
          type: boolean
          default: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Work%20Package'
      produces:
        - application/hal+json
    delete:
      responses:
        '204':
          description: >-
            Returned if the work package was deleted successfully.


            Note that the response body is empty as of now. In future versions
            of the API a body

            *might* be returned along with an appropriate HTTP status.
          headers: {}
          examples: {}
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** delete work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to delete this work package.
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
      summary: Delete Work Package
      description: |-
        Deletes the work package, as well as:

        * all associated time entries

        * its hierarchy of child work packages
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: Work package id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/work_packages/schemas/{identifier}':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: Schema
              _dependencies: []
              _links:
                self:
                  href: /api/v3/example/schema
              lockVersion:
                name: Resource Version
                type: Integer
                writable: false
              subject:
                name: Subject
                type: String
                minLength: 1
                maxLength: 255
              status:
                _links:
                  allowedValues:
                    - href: /api/v3/statuses/1
                      title: New
                    - href: /api/v3/statuses/2
                      title: Closed
                name: Status
                type: Status
                _embedded:
                  allowedValues:
                    - _links:
                        self:
                          href: /api/v3/statuses/1
                      _type: Status
                      id: 1
                      name: New
                      position: 1
                      isDefault: true
                      isClosed: false
                      defaultDoneRatio: 0
                      createdAt: '2014-05-21T08:51:20Z'
                      updatedAt: '2014-05-21T09:12:00Z'
                    - _links:
                        self:
                          href: /api/v3/statuses/2
                      _type: Status
                      id: 2
                      name: Closed
                      position: 2
                      isDefault: false
                      isClosed: true
                      defaultDoneRatio: 100
                      createdAt: '2014-05-21T08:51:20Z'
                      updatedAt: '2014-05-21T09:12:00Z'
        '404':
          description: >-
            Returned if the schema does not exist or the client does not have
            sufficient permissions

            to see it.


            **Required permission:** view work packages (on the project where
            this schema is used)


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of a project.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified schema does not exist.
      summary: View Work Package Schema
      description: ''
      tags:
        - Work Packages
      parameters:
        - name: identifier
          in: path
          description: Identifier of the schema
          required: true
          type: string
      produces:
        - application/hal+json
  /api/v3/work_packages/schemas/:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '400':
          description: Returned if the client sends invalid request.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidQuery'
              message: Unknown filter.
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** View work packages in any project.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to list schemas.
      summary: List Work Package Schemas
      description: List work package schemas.
      tags:
        - Work Packages
      parameters:
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions.

            Accepts the same format as returned by the [queries](#queries)
            endpoint. Currently supported filters are:


            + id: The schema's id
          required: true
          type: string
      produces:
        - application/hal+json
  '/api/v3/work_packages/{id}/form':
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/example/form
                validate:
                  href: /api/v3/example/form
                  method: POST
                previewMarkup:
                  href: /api/v3/render/textile
                  method: POST
                commit:
                  href: /api/v3/example
                  method: PATCH
              _type: Form
              _embedded:
                payload:
                  _links:
                    status:
                      href: /api/v3/statuses/1
                  _type: Example
                  lockVersion: 5
                  subject: An example title
                schema:
                  _type: Schema
                  _links:
                    self:
                      href: /api/v3/example/schema
                  lockVersion:
                    type: Integer
                    writable: false
                  subject:
                    type: String
                    minLength: 1
                    maxLength: 255
                  status:
                    _links:
                      allowedValues:
                        - href: /api/v3/statuses/1
                          title: New
                        - href: /api/v3/statuses/2
                          title: Closed
                    type: Status
                    _embedded:
                      allowedValues:
                        - _links:
                            self:
                              href: /api/v3/statuses/1
                          _type: Status
                          id: 1
                          name: New
                          position: 1
                          isDefault: true
                          isClosed: false
                          defaultDoneRatio: 0
                          createdAt: '2014-05-21T08:51:20Z'
                          updatedAt: '2014-05-21T09:12:00Z'
                        - _links:
                            self:
                              href: /api/v3/statuses/2
                          _type: Status
                          id: 2
                          name: Closed
                          position: 2
                          isDefault: false
                          isClosed: true
                          defaultDoneRatio: 100
                          createdAt: '2014-05-21T08:51:20Z'
                          updatedAt: '2014-05-21T09:12:00Z'
                validationErrors:
                  subject:
                    _type: Error
                    errorIdentifier: 'urn:openproject-org:api:v3:errors:BadExampleError'
                    message: >-
                      For the purpose of this example we need a validation
                      error. The remainder of the response pretends there were
                      no errors.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** edit work package


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to edit the specified work package.
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
      summary: Work Package Edit Form
      description: ''
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: ID of the work package being modified
          required: true
          type: integer
      produces:
        - application/hal+json
  /api/v3/work_packages:
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Work%20Packages"
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/work_packages
              total: 2
              count: 2
              _type: Collection
              _embedded:
                elements:
                  - _type: WorkPackage
                    _links:
                      self:
                        href: /api/v3/work_packages/1
                    id: 1
                    subject: Skipped other properties for brevity
                  - _type: WorkPackage
                    _links:
                      self:
                        href: /api/v3/work_packages/2
                    id: 2
                    subject: Skipped other properties for brevity
        '400':
          description: >-
            Returned if the client sends a query parameter, that the server
            knows, but does not understand.

            E.g. by providing a syntactically incorrect `filters` parameter.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidQuery'
              message: Operator can't be blank.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** view work packages (globally or in any
            project)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to see work packages.
      summary: List Work Packages
      description: ''
      tags:
        - Work Packages
      parameters:
        - name: offset
          in: query
          description: Page number inside the requested collection.
          required: false
          type: integer
          default: 1
        - name: pageSize
          in: query
          description: Number of elements to display per page.
          required: false
          type: integer
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions.

            Accepts the same format as returned by the [queries](#queries)
            endpoint.
          required: false
          type: string
        - name: sortBy
          in: query
          description: >-
            JSON specifying sort criteria.

            Accepts the same format as returned by the [queries](#queries)
            endpoint.
          required: false
          type: string
        - name: groupBy
          in: query
          description: The column to group by.
          required: false
          type: string
        - name: showSums
          in: query
          description: Indicates whether properties should be summed up if they support it.
          required: false
          type: boolean
          default: false
      produces:
        - application/hal+json
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
          schema:
            $ref: "#/definitions/Work%20Package"
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** add work packages


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding project.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to add work packages to this project.
        '404':
          description: >-
            Returned if the project does not exist or the client does not have
            sufficient permissions

            to see it.


            **Required permissions:** view project


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of a project.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified project does not exist.
        '422':
          description: |-
            Returned if:

            * the client tries to write a read-only property

            * a constraint for a property was violated

            * a property was provided in an unreadable format
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: The subject might not be blank.
              _embedded:
                details:
                  attribute: Subject
      summary: Create Work Package
      description: >-
        When calling this endpoint the client provides a single object,
        containing at least the properties and links that are required, in the
        body.

        The required fields of a WorkPackage can be found in its schema, which
        is embedded in the respective form.

        Note that it is only allowed to provide properties or links supporting
        the write operation.


        A project link must be set when creating work packages through this
        route.
      tags:
        - Work Packages
      parameters:
        - name: notify
          in: query
          description: >-
            Indicates whether change notifications (e.g. via E-Mail) should be
            sent.

            Note that this controls notifications for all users interested in
            changes to the work package (e.g. watchers, author and assignee),

            not just the current user.
          required: false
          type: boolean
          default: true
        - name: work_package
          in: body
          description: Work package to add (a project link ist requried)
          required: true
          schema:
            $ref: '#/definitions/Work%20Package'
      produces:
        - application/hal+json
  /api/v3/work_packages/form:
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/example/form
                validate:
                  href: /api/v3/example/form
                  method: POST
                previewMarkup:
                  href: /api/v3/render/textile
                  method: POST
                commit:
                  href: /api/v3/example
                  method: PATCH
              _type: Form
              _embedded:
                payload:
                  _links:
                    status:
                      href: /api/v3/statuses/1
                  _type: Example
                  lockVersion: 5
                  subject: An example title
                schema:
                  _type: Schema
                  _links:
                    self:
                      href: /api/v3/example/schema
                  lockVersion:
                    type: Integer
                    writable: false
                  subject:
                    type: String
                    minLength: 1
                    maxLength: 255
                  status:
                    _links:
                      allowedValues:
                        - href: /api/v3/statuses/1
                          title: New
                        - href: /api/v3/statuses/2
                          title: Closed
                    type: Status
                    _embedded:
                      allowedValues:
                        - _links:
                            self:
                              href: /api/v3/statuses/1
                          _type: Status
                          id: 1
                          name: New
                          position: 1
                          isDefault: true
                          isClosed: false
                          defaultDoneRatio: 0
                          createdAt: '2014-05-21T08:51:20Z'
                          updatedAt: '2014-05-21T09:12:00Z'
                        - _links:
                            self:
                              href: /api/v3/statuses/2
                          _type: Status
                          id: 2
                          name: Closed
                          position: 2
                          isDefault: false
                          isClosed: true
                          defaultDoneRatio: 100
                          createdAt: '2014-05-21T08:51:20Z'
                          updatedAt: '2014-05-21T09:12:00Z'
                validationErrors:
                  subject:
                    _type: Error
                    errorIdentifier: 'urn:openproject-org:api:v3:errors:BadExampleError'
                    message: >-
                      For the purpose of this example we need a validation
                      error. The remainder of the response pretends there were
                      no errors.
      summary: Work Package Create Form
      description: ''
      tags:
        - Work Packages
      parameters: []
      produces:
        - application/hal+json
  '/api/v3/projects/{id}/work_packages':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            $ref: "#/definitions/Work%20Packages"
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/projects/14/work_packages
              total: 2
              count: 2
              _type: Collection
              _embedded:
                elements:
                  - _type: WorkPackage
                    _links:
                      self:
                        href: /api/v3/work_packages/1
                    id: 1
                    subject: Skipped other properties for brevity
                  - _type: WorkPackage
                    _links:
                      self:
                        href: /api/v3/work_packages/2
                    id: 2
                    subject: Skipped other properties for brevity
        '400':
          description: >-
            Returned if the client sends a query parameter, that the server
            knows, but does not understand.

            E.g. by providing a syntactically incorrect `filters` parameter.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidQuery'
              message: Operator can't be blank.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** view work packages


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding project.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to see the work packages of this project.
        '404':
          description: >-
            Returned if the project does not exist or the client does not have
            sufficient permissions to see it.


            **Required permission:** view project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified project does not exist.
      summary: List Work Packages
      description: ''
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: Project id
          required: true
          type: integer
        - name: offset
          in: query
          description: Page number inside the requested collection.
          required: false
          type: integer
          default: 1
        - name: pageSize
          in: query
          description: Number of elements to display per page.
          required: false
          type: integer
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions.

            Accepts the same format as returned by the [queries](#queries)
            endpoint.
          required: false
          type: string
        - name: sortBy
          in: query
          description: >-
            JSON specifying sort criteria.

            Accepts the same format as returned by the [queries](#queries)
            endpoint.
          required: false
          type: string
        - name: groupBy
          in: query
          description: The column to group by.
          required: false
          type: string
        - name: showSums
          in: query
          description: Indicates whether properties should be summed up if they support it.
          required: false
          type: boolean
          default: false
      produces:
        - application/hal+json
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
          schema:
            $ref: "#/definitions/Work%20Package"
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** add work packages


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding project.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to add work packages to this project.
        '404':
          description: >-
            Returned if the project does not exist or the client does not have
            sufficient permissions

            to see it.


            **Required permissions:** view project


            *Note: A client without sufficient permissions shall not be able to
            test for the existence of a project.

            That's why a 404 is returned here, even if a 403 might be more
            appropriate.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified project does not exist.
        '422':
          description: |-
            Returned if:

            * the client tries to write a read-only property

            * a constraint for a property was violated

            * a property was provided in an unreadable format
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: The subject might not be blank.
              _embedded:
                details:
                  attribute: Subject
      summary: Create Work Package
      description: >-
        When calling this endpoint the client provides a single object,
        containing at least the properties and links that are required, in the
        body.

        The required fields of a WorkPackage can be found in its schema, which
        is embedded in the respective form.

        Note that it is only allowed to provide properties or links supporting
        the write operation.
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: Project id
          required: true
          type: integer
        - name: notify
          in: query
          description: >-
            Indicates whether change notifications (e.g. via E-Mail) should be
            sent.

            Note that this controls notifications for all users interested in
            changes to the work package (e.g. watchers, author and assignee),

            not just the current user.
          required: false
          type: boolean
          default: true
        - name: work_package
          in: body
          description: Work package to add to the project
          required: true
          schema:
            $ref: '#/definitions/Work%20Package'
      produces:
        - application/hal+json
  '/api/v3/projects/{id}/work_packages/form':
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/example/form
                validate:
                  href: /api/v3/example/form
                  method: POST
                previewMarkup:
                  href: /api/v3/render/textile
                  method: POST
                commit:
                  href: /api/v3/example
                  method: PATCH
              _type: Form
              _embedded:
                payload:
                  _links:
                    status:
                      href: /api/v3/statuses/1
                  _type: Example
                  lockVersion: 5
                  subject: An example title
                schema:
                  _type: Schema
                  _links:
                    self:
                      href: /api/v3/example/schema
                  lockVersion:
                    type: Integer
                    writable: false
                  subject:
                    type: String
                    minLength: 1
                    maxLength: 255
                  status:
                    _links:
                      allowedValues:
                        - href: /api/v3/statuses/1
                          title: New
                        - href: /api/v3/statuses/2
                          title: Closed
                    type: Status
                    _embedded:
                      allowedValues:
                        - _links:
                            self:
                              href: /api/v3/statuses/1
                          _type: Status
                          id: 1
                          name: New
                          position: 1
                          isDefault: true
                          isClosed: false
                          defaultDoneRatio: 0
                          createdAt: '2014-05-21T08:51:20Z'
                          updatedAt: '2014-05-21T09:12:00Z'
                        - _links:
                            self:
                              href: /api/v3/statuses/2
                          _type: Status
                          id: 2
                          name: Closed
                          position: 2
                          isDefault: false
                          isClosed: true
                          defaultDoneRatio: 100
                          createdAt: '2014-05-21T08:51:20Z'
                          updatedAt: '2014-05-21T09:12:00Z'
                validationErrors:
                  subject:
                    _type: Error
                    errorIdentifier: 'urn:openproject-org:api:v3:errors:BadExampleError'
                    message: >-
                      For the purpose of this example we need a validation
                      error. The remainder of the response pretends there were
                      no errors.
      summary: Work Package Create Form
      description: ''
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: ID of the project in which the work package will be created
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/work_packages/{work_package_id}/relations':
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/relations/1
                update:
                  href: /api/v3/relations/1/form
                  method: POST
                updateImmediately:
                  href: /api/v3/relations/1
                  method: PATCH
                delete:
                  href: /api/v3/relations/1
                  method: DELETE
                from:
                  href: /api/v3/work_packages/42
                  title: Steel Delivery
                to:
                  href: /api/v3/work_packages/84
                  title: Bending the steel
              _type: Relation
              id: 1
              name: precedes
              type: precedes
              reverseType: follows
              description: We can't bend the steel before it's been delivered!
              delay: 0
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '403':
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage work package relations
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to create a relation.
        '409':
          description: >-
            Returned if there already exists a relation between the given work
            packages of **any** type

            or if the relation is not allowed.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:UpdateConflict'
              message: >-
                Couldn't update the resource because of conflicting
                modifications.
        '422':
          description: >-
            Returned if:


            * the client tries to write a read-only property
            (`PropertyIsReadOnly`)


            * a constraint for a property was violated
            (`PropertyConstraintViolation`)


            * the client provides a link to an invalid resource
            (`ResourceTypeMismatch`)
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:PropertyConstraintViolation'
              message: Delay must be a number greater than or equal to 0
              _embedded:
                details:
                  attribute: delay
      summary: Create Relation
      description: >-
        When calling this endpoint the client provides a single object,
        containing at least the properties and links that are required, in the
        body.

        The required fields of a Relation can be found in its schema, which is
        embedded in the respective form.

        Note that it is only allowed to provide properties or links supporting
        the write operation.
      tags:
        - Work Packages
      parameters:
        - name: work_package_id
          in: path
          description: Work package id
          required: true
          type: integer
      produces:
        - application/hal+json
    get:
      responses:
        '302':
          description: Found
          headers: {}
          examples:
            text/plain: >
              You are being redirected to
              /api/v3/relations?involved={work_package_id}
      summary: List relations
      description: Lists all relations this work package is involved in.
      tags:
        - Work Packages
      parameters:
        - name: work_package_id
          in: path
          description: Work package id
          required: true
          type: integer
      produces:
        - text/plain
  '/api/v3/work_packages/{id}/relations/form':
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/relations/form
                validate:
                  href: /api/v3/relations/form
                  method: POST
                commit:
                  href: /api/v3/relations
                  method: PATCH
              _type: Form
              _embedded:
                payload:
                  _links:
                    from:
                      href: /api/v3/work_packages/4534
                    to:
                      href: /api/v3/work_packages/3857
                  _type: WorkPackage
                  type: follows
                  delay: 3
                  description: let it rest for 3 days
                schema:
                  _type: Schema
                  id:
                    name: ID
                    type: Integer
                    writable: false
                  type:
                    name: Type
                    type: String
                    writable: true
                    allowedValues:
                      - relates
                      - duplicates
                      - duplicated
                      - blocks
                      - blocked
                      - precedes
                      - follows
                      - includes
                      - partof
                      - requires
                      - required
                  reverseType:
                    name: Reverse Type
                    type: String
                    writable: false
                  description:
                    name: Description
                    type: String
                    writable: true
                  from:
                    _links:
                      allowedValues:
                        - href: '/api/v3/work_packages/{id}'
                    name: From work package
                    type: WorkPackage
                    writable: true
                  to:
                    _links:
                      allowedValues:
                        href: >-
                          /api/v3/work_packages/{id}/available_relation_candidates
                        title: Available work packages to relate to
                    name: To work package
                    type: WorkPackage
                    writable: true
                  delay:
                    name: Delay
                    type: Integer
                    writable: true
                validationErrors:
                  from:
                    _type: Error
                    errorIdentifier: 'urn:openproject-org:api:v3:errors:BadExampleError'
                    message: >-
                      For the purpose of this example we need a validation
                      error. The remainder of the response pretends there were
                      no errors.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** manage work package relations


            *Note that you will only receive this error, if you are at least
            allowed to see the involved work packages.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to edit the specified relation.
        '404':
          description: >-
            Returned if the relation does not exist or the client does not have
            sufficient permissions to see it.


            **Required permission:** view (involved) work package(s), manage
            work package relations
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified relation does not exist.
      summary: Relation create form
      description: ''
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: ID of the relation being modified
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/work_packages/{work_package_id}/watchers':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** view work package watchers


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to see the watchers of this work package.
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package


            *Note that you will effectively not be able to see the watchers of a
            work package without being able to see the work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
      summary: List watchers
      description: ''
      tags:
        - Work Packages
      parameters:
        - name: work_package_id
          in: path
          description: Work package id
          required: true
          type: integer
      produces:
        - application/hal+json
    post:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '201':
          description: Created
          headers: {}
          examples: {}
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.


            For example:


            * The request did not contain a single JSON object


            * The JSON object did not contain the key `user`


            * The value of `users` was not a link object
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permissions:**


            * view work package (for self)


            * add work package watchers (for other users)


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to add watchers to this work package.
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package


            *Note that you will effectively not be able to change the watchers
            of a work package without being able to see the work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
        '422':
          description: >-
            Returned if:


            * the client tries to specify a link to a resource that is not a
            user (`ResourceTypeMismatch`)


            * the user specified is not allowed to watch that work package
            (`PropertyConstraintViolation`)


            * the user specified does not exist (`PropertyConstraintViolation`)
          headers: {}
          examples: {}
      summary: Add watcher
      description: >-
        Adds a watcher to the specified work package.


        The request is expected to contain a single JSON object, that contains a
        link object under the `user` key.


        The response will be user added as watcher.

        In case the user was already watching the work package an `HTTP 200` is
        returned, an

        `HTTP 201` if the user was added as a new watcher.
      tags:
        - Work Packages
      parameters:
        - name: work_package_id
          in: path
          description: Work package id
          required: true
          type: integer
        - name: body
          in: body
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  href:
                    type: string
      produces:
        - application/hal+json
  '/api/v3/work_packages/{work_package_id}/watchers/{id}':
    delete:
      responses:
        '204':
          description: No Content
          headers: {}
          examples: {}
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** delete work package watchers


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to remove watchers from this work package.
        '404':
          description: >-
            Returned in one of the following cases:


            Either the work package does not exist or the client does not have
            sufficient permissions to see it.


            **Required permission:** view work package


            Or the specified user does not exist at all.


            *Note that you will effectively not be able to change the watchers
            of a work package without being able to see the work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
      summary: Remove watcher
      description: >-
        Removes the specified user from the list of watchers for the given work
        package.


        If the request succeeds, the specified user is not watching the work
        package anymore.


        *Note: This might also be the case, if the specified user did not watch
        the work package prior to the request.*
      tags:
        - Work Packages
      parameters:
        - name: work_package_id
          in: path
          description: Work package id
          required: true
          type: integer
        - name: id
          in: path
          description: User id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/work_packages/{id}/available_relation_candidates':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _links:
                self:
                  href: /api/v3/projects/14/work_packages
              total: 2
              count: 2
              _type: Collection
              _embedded:
                elements:
                  - _type: WorkPackage
                    _links:
                      self:
                        href: /api/v3/work_packages/1
                    id: 1
                    subject: Skipped other properties for brevity
                  - _type: WorkPackage
                    _links:
                      self:
                        href: /api/v3/work_packages/2
                    id: 2
                    subject: Skipped other properties for brevity
      summary: Available relation candidates
      description: ''
      tags:
        - Work Packages
      parameters:
        - name: "id"
          in: "path"
          description: "ID of workpackage to return"
          required: true
          type: "integer"
          format: "int64"
        - name: pageSize
          in: query
          description: Maximum number of candidates to list (default 10)
          required: false
          type: integer
        - name: filters
          in: query
          description: >-
            JSON specifying filter conditions.

            Accepts the same format as returned by the [queries](#queries)
            endpoint.
          required: false
          type: string
        - name: query
          in: query
          description: Shortcut for filtering by ID or subject
          required: false
          type: string
        - name: type
          in: query
          description: Type of relation to find candidates for (default "relates")
          required: false
          type: string
      produces:
        - application/hal+json
  '/api/v3/work_packages/{id}/available_watchers':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** add work package watchers


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not authorized to access this resource.
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
      summary: Available watchers
      description: >-
        Gets a list of users that are able to be watchers of the specified work
        package.
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: work package id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/work_packages/{id}/available_projects':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** edit work package


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not authorized to access this resource.
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
      summary: Available projects
      description: >-
        Gets a list of projects that are available as projects to which the work
        package can be moved.
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: work package id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/work_packages/{id}/revisions':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** view work packages for the project the work
            package is contained in.


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: >-
                You are not allowed to see linked revisions for this work
                package.
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work project does not exist.
      summary: Revisions
      description: >-
        Gets a list of revisions that are linked to this work package, e.g.,
        because it is referenced in the commit message of the revision.

        Only linked revisions from repositories are shown if the user has the
        view changesets permission in the defining project.
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: work package id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/work_packages/{id}/activities':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples:
            application/hal+json:
              _type: 'Activity::Comment'
              _links:
                self:
                  href: /api/v3/activity/1
                  title: Priority changed from High to Low
                workPackage:
                  href: /api/v3/work_packages/1
                  title: quis numquam qui voluptatum quia praesentium blanditiis nisi
                user:
                  href: /api/v3/users/1
                  title: John Sheppard - admin
              id: 1
              details:
                - format: textile
                  raw: Lorem ipsum dolor sit amet.
                  html: <p>Lorem ipsum dolor sit amet.</p>
              comment:
                format: textile
                raw: Lorem ipsum dolor sit amet.
                html: <p>Lorem ipsum dolor sit amet.</p>
              createdAt: '2014-05-21T08:51:20Z'
              version: 31
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
      summary: List work package activities
      description: ''
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: Work package id
          required: true
          type: integer
      produces:
        - application/hal+json
    post:
      responses:
        '201':
          description: Created
          headers: {}
          examples:
            application/hal+json:
              _type: 'Activity::Comment'
              _links:
                self:
                  href: /api/v3/activity/1
                  title: Priority changed from High to Low
                workPackage:
                  href: /api/v3/work_packages/1
                  title: quis numquam qui voluptatum quia praesentium blanditiis nisi
                user:
                  href: /api/v3/users/1
                  title: John Sheppard - admin
              id: 1
              details:
                - format: textile
                  raw: Lorem ipsum dolor sit amet.
                  html: <p>Lorem ipsum dolor sit amet.</p>
              comment:
                format: textile
                raw: Lorem ipsum dolor sit amet.
                html: <p>Lorem ipsum dolor sit amet.</p>
              createdAt: '2014-05-21T08:51:20Z'
              version: 31
        '400':
          description: >-
            Occurs when the client did not send a valid JSON object in the
            request body.
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:InvalidRequestBody'
              message: The request body was not a single JSON object.
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** create journals


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding work package.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: You are not allowed to create a comment here.
        '404':
          description: >-
            Returned if the work package does not exist or the client does not
            have sufficient permissions to see it.


            **Required permission:** view work package
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified work package does not exist.
      summary: Comment work package
      description: >-
        Creates an activity for the selected work package and, on success,
        returns the

        updated activity.
      tags:
        - Work Packages
      parameters:
        - name: id
          in: path
          description: Work package id
          required: true
          type: integer
        - name: notify
          in: query
          description: >-
            Indicates whether change notifications (e.g. via E-Mail) should be
            sent.

            Note that this controls notifications for all users interested in
            changes to the work package (e.g. watchers, author and assignee),

            not just the current user.
          required: false
          type: boolean
          default: true
        - name: body
          in: body
          schema:
            type: object
            properties:
              comment:
                type: object
                properties:
                  raw:
                    type: string
      produces:
        - application/hal+json
  '/api/v3/projects/{project_id}/work_packages/available_assignees':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** view work packages


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding project.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: >-
                You are not allowed to see the assignable users for this
                project.
        '404':
          description: >-
            Returned if the project does not exist or the client does not have
            sufficient permissions to see it.


            **Required permission:** view project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified project does not exist.
      summary: Available assignees
      description: >-
        Gets a list of users that can be assigned to work packages in the given
        project.
      tags:
        - Work Packages
      parameters:
        - name: project_id
          in: path
          description: Project id
          required: true
          type: integer
      produces:
        - application/hal+json
  '/api/v3/projects/{project_id}/work_packages/available_responsibles':
    get:
      responses:
        '200':
          description: OK
          headers: {}
          examples: {}
        '403':
          description: >-
            Returned if the client does not have sufficient permissions.


            **Required permission:** view work packages


            *Note that you will only receive this error, if you are at least
            allowed to see the corresponding project.*
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:MissingPermission'
              message: >-
                You are not allowed to see the users available as responsible
                for this project.
        '404':
          description: >-
            Returned if the project does not exist or the client does not have
            sufficient permissions to see it.


            **Required permission:** view project
          headers: {}
          examples:
            application/hal+json:
              _type: Error
              errorIdentifier: 'urn:openproject-org:api:v3:errors:NotFound'
              message: The specified project does not exist.
      summary: Available responsibles
      description: >-
        Gets a list of users that can be assigned as the responsible of a work
        package in the given project.
      tags:
        - Work Packages
      parameters:
        - name: project_id
          in: path
          description: Project id
          required: true
          type: integer
      produces:
        - application/hal+json
definitions:
  Offset based pagination: {}
  Cursor based pagination: {}
  Aggregations: {}
  Activity:
    type: object
    properties:
      id:
        type: integer
        format: int32
        readOnly: true
      version:
        type: integer
        format: int32
        readOnly: true
      comment:
        $ref: "#/definitions/Description"
      details:
        type: array
        readOnly: true
        items:
          $ref: "#/definitions/Description"
      createdAt:
        type: string
        format: date-time
      _links:
        $ref: "#/definitions/ActivityLinks"
  ActivityLinks:
    type: object
    properties:
      self:
        $ref: "#/definitions/Link"
      workPackage:
        $ref: "#/definitions/Link"
      user:
        $ref: "#/definitions/Link"
  ActivityModel: {}
  Attachment: {}
  AttachmentModel: {}
  Attachments by work package: {}
  Attachments by work packageModel: {}
  Categories by Project: {}
  Categories by ProjectModel: {}
  Category: {}
  CategoryModel: {}
  Configuration:
    type: "object"
    properties:
      maximumAttachmentFileSize:
        type: "integer"
        readOnly: true
      perPageOptions:
        type: "array"
        readOnly : true
        items:
          type: "integer"
  ConfigurationModel: {}
  Custom Action: {}
  Custom ActionModel: {}
  Execute custom action: {}
  Custom Object: {}
  Custom ObjectModel: {}
  Example Form: {}
  Example FormModel: {}
  Help texts: {}
  Help textsModel: {}
  Help text: {}
  Help textModel: {}
  Principals: {}
  PrincipalsModel: {}
  Priorities: {}
  PrioritiesModel: {}
  Priority: {}
  PriorityModel: {}

  Project:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      identifier:
        type: "string"
      active:
        type: "boolean"
      status:
        type: "string"
        enum:
          - "on track"
          - "at risk"
          - "off track"
      statusExplanation:
        $ref: "#/definitions/Description"
      public:
        type: "boolean"
      description:
        $ref: "#/definitions/Description"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      _links:
        $ref: "#/definitions/ProjectLinks"
    xml:
      name: "Project"

  ProjectLinks:
    type: "object"
    properties:
      self:
        $ref: "#/definitions/Link"
      createWorkPackage:
        $ref: "#/definitions/Link"
      createWorkPackageImmediate:
        $ref: "#/definitions/Link"
      categories:
        $ref: "#/definitions/Link"
      types:
        $ref: "#/definitions/Link"
      versions:
        $ref: "#/definitions/Link"
      workPackages:
        $ref: "#/definitions/Link"
      memberships:
        $ref: "#/definitions/Link"
      delete:
        $ref: "#/definitions/Link"
      schema:
        $ref: "#/definitions/Link"
      parent:
        $ref: "#/definitions/Link"

  ProjectModel: {}

  Projects:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      _embedded:
        $ref: "#/definitions/Projects_embedded"
      _links:
        $ref: "#/definitions/ProjectsLinks"
    xml:
      name: "Project"

  ProjectsLinks:
    type: "object"
    properties:
      self:
        $ref: "#/definitions/Link"

  Projects_embedded:
    type: "object"
    properties:
      elements:
        type: "array"
        items:
          $ref: "#/definitions/Project"
    xml:
      name: "Projects"

  ProjectsModel: {}
  Projects by version: {}
  Projects by versionModel: {}
  Query: {}
  QueryModel: {}
  Default Query: {}
  Default QueryModel: {}
  Default Query for Project: {}
  Default Query for ProjectModel: {}
  Star Query: {}
  Star QueryModel: {}
  Unstar Query: {}
  Unstar QueryModel: {}
  Queries: {}
  QueriesModel: {}
  Query Create Form: {}
  Schema For Global Queries: {}
  Schema For Global QueriesModel: {}
  Schema For Project Queries: {}
  Schema For Project QueriesModel: {}
  Query Available Projects: {}
  Query Available ProjectsModel: {}
  Query Column: {}
  Query ColumnModel: {}
  Query Filter: {}
  Query FilterModel: {}
  Query Operator: {}
  Query OperatorModel: {}
  Query Sort By: {}
  Query Sort ByModel: {}
  Query Filter Instance Schema: {}
  Query Filter Instance SchemaModel: {}
  Query Filter Instance Schemas: {}
  Query Filter Instance SchemasModel: {}
  Query Filter Instance Schemas For Project: {}
  Query Filter Instance Schemas For ProjectModel: {}
  Relation: {}
  RelationModel: {}
  Relation schema: {}
  Relation schemaModel: {}
  Relation schema for type: {}
  Relations: {}
  RelationsModel: {}
  Relation edit form: {}
  Relation edit formModel: {}
  Textile: {}
  TextileModel: {}
  Plain Text: {}
  Plain TextModel: {}
  Revision: {}
  RevisionModel: {}
  Role: {}
  RoleModel: {}
  Roles: {}
  RolesModel: {}
  Root:
    type: "object"
    properties:
      instanceName:
        type: "string"
        readOnly: true
      coreVersion:
        type: "string"
        readOnly: true
      _links:
        $ref: "#/definitions/RootLinks"
  RootLinks:
    type: "object"
    properties:
      configuration:
        $ref: "#/definitions/Link"
      user:
        $ref: "#/definitions/Link"
      userPreferences:
        $ref: "#/definitions/Link"
      priorities:
        $ref: "#/definitions/Link"
      relations:
        $ref: "#/definitions/Link"
      statuses:
        $ref: "#/definitions/Link"
      types:
        $ref: "#/definitions/Link"
      workPackages:
        $ref: "#/definitions/Link"
      users:
        $ref: "#/definitions/Link"
  RootModel: {}
  Example Schema: {}
  Example SchemaModel: {}
  Statuses: {}
  StatusesModel: {}
  Status: {}
  StatusModel: {}
  String Object: {}
  String ObjectModel: {}

  ###############

  Time entry:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      hours:
        type: "string"
      comment:
        type: "string"
      spentOn:
        type: "string"
        format: "date"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      _embedded:
        $ref: "#/definitions/Time_entry_embedded"
      _links:
        $ref: "#/definitions/Time%20entry%20Links"
    xml:
      name: "time_entry"


  Time entry Links:
    type: "object"
    properties:
      self:
        $ref: "#/definitions/Link"
      project:
        $ref: "#/definitions/Link"
      workPackage:
        $ref: "#/definitions/Link"
      user:
        $ref: "#/definitions/Link"
      activity:
        $ref: "#/definitions/Link"

  Time_entry_embedded:
    type: "object"
    properties:
      project:
        $ref: "#/definitions/Project"
      workPackage:
        $ref: "#/definitions/Work%20Package"
      user:
        $ref: "#/definitions/User"
      activity:
        $ref: "#/definitions/Activity"
    xml:
      name: "_embedded"

  Time entryModel: {}

  Time entries:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      _embedded:
        $ref: "#/definitions/Time_entries_embedded"
      _links:
        $ref: "#/definitions/Time%20entries%20Links"
    xml:
      name: "Type"

  Time_entries_embedded:
    type: "object"
    properties:
      elements:
        type: "array"
        items:
          $ref: "#/definitions/Time%20entry"
    xml:
      name: "time_entry"

  Time entries Links:
    type: "object"
    properties:
      self:
        $ref: "#/definitions/Link"
      jumpTo:
        $ref: "#/definitions/Link"
      changeSize:
        $ref: "#/definitions/Link"
      nextByOffset:
        $ref: "#/definitions/Link"

  Link:
    type: "object"
    properties:
      href:
        type: "string"
      title:
        type: "string"
      method:
        type: "string"
        enum:
          - "patch"
          - "post"
          - "get"
      type:
        type: "string"

  Time entriesModel: {}
  Time entries activity: {}
  Time entries activityModel: {}

  WPType:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      color:
        type: "string"
      position:
        type: "integer"
        format: "int32"
      isDefault:
        type: "boolean"
        default: false
      isMilestone:
        type: "boolean"
        default: false
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      _links:
        $ref: "#/definitions/WPType%20Links"
    xml:
      name: "Type"


  WPType Links:
    type: "object"
    properties:
      self:
        $ref: "#/definitions/Link"

  WPTypes:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      _embedded:
        $ref: "#/definitions/WPTypes_embedded"
      _links:
        $ref: "#/definitions/WPType%20Links"
    xml:
      name: "Type"

  WPTypes_embedded:
    type: "object"
    properties:
      elements:
        type: "array"
        items:
          $ref: "#/definitions/WPType"
    xml:
      name: "Type"

  TypesModel: {}
  Types by Project: {}
  Types by ProjectModel: {}
  TypeModel: {}
  UserPreferences:
    type: object
    properties:
      hideMail:
        type: "boolean"
      timeZone:
        type: "string"
      commentSortDescending:
        type: "boolean"
      warnOnLeavingUnsaved:
        type: "boolean"
      accessibilityMode:
        type: "boolean"
      _links:
        $ref: "#/definitions/UserPreferencesLinks"

  UserPreferencesLinks:
    type: object
    properties:
      self:
        $ref: "#/definitions/Link"
      user:
        $ref: "#/definitions/Link"

  UserPreferencesModel: {}

  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        readOnly: true
      login:
        type: "string"
        maxLength: 256
        uniqueItems: true
      firstName:
        type: "string"
        maxLength: 30
      lastName:
        type: "string"
        maxLength: 30
      name:
        type: "string"
        readOnly: true
      email:
        type: "string"
        maxLength: 60
      admin:
        type: "boolean"
      avatar:
        type: "string"
        readOnly: true
      createdAt:
        type: "string"
        format: "date-time"
        readOnly: true
      updatedAt:
        type: "string"
        format: "date-time"
        readOnly: true
      status:
        type: "string"
        enum:
          - "active"
          - "registered"
          - "locked"
          - "invited"
        readOnly: true
      language:
        type: "string"
      password:
        type: "string"
      identity_url:
        type: "string"
      _links:
        $ref: "#/definitions/UserLinks"
    xml:
      name: "User"

  UserLinks:
    type: object
    properties:
      self:
        $ref: "#/definitions/Link"
      show:
        $ref: "#/definitions/Link"
      lock:
        $ref: "#/definitions/Link"
      updateImmediately:
        $ref: "#/definitions/Link"
      delete:
        $ref: "#/definitions/Link"

  UserModel: {}
  User Account Locking: {}

  Users:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      _embedded:
        $ref: "#/definitions/Users%20embedded"

  Users embedded:
    type: "object"
    properties:
      elements:
        type: "array"
        items:
          $ref: "#/definitions/User"

  UsersModel: {}

  Version:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      description:
        $ref: "#/definitions/Description"
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
      status:
        type: "string"
        enum:
          - "open"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      _links:
        $ref: "#/definitions/Version%20Links"

  Version Links:
    type: "object"
    properties:
      self:
        $ref: "#/definitions/Link"
      definingProject:
        $ref: "#/definitions/Link"
      availableInProjects:
        $ref: "#/definitions/Link"

  VersionModel: {}

  Versions:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      _embedded:
        $ref: "#/definitions/Versions%20embedded"
    xml:
      name: "Type"

  Versions embedded:
    type: "object"
    properties:
      elements:
        type: "array"
        items:
          $ref: "#/definitions/Version"

  VersionsModel: {}
  Versions by Project: {}
  Versions by ProjectModel: {}

  Description:
    type: object
    description: "Formattable"
    properties:
      format:
        type: string
        enum:
          - "plain"
          - "markdown"
          - "custom"
        readOnly: true
      raw:
        type: string
      html:
        type: string
        readOnly: true


  Work Package Patch:
    type: "object"
    properties:
      lockVersion:
        type: integer
        format: int32
      percentageDone:
        type: "integer"
        format: "int32"
      subject:
        type: "string"
      description:
        $ref: "#/definitions/Description"
      startDate:
        type: "string"
        format: "date-time"
      dueDate:
        type: "string"
        format: "date-time"
      estimatedTime:
        type: "string"
      _links:
        $ref: "#/definitions/Work%20Package%20Links"

  Work Package:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      lockVersion:
        type: "integer"
        format: "int32"
      percentageDone:
        type: "integer"
        format: "int32"
      subject:
        type: "string"
      description:
        $ref: "#/definitions/Description"
      startDate:
        type: "string"
        format: "date-time"
      dueDate:
        type: "string"
        format: "date-time"
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
      estimatedTime:
        type: "string"
      _embedded:
        $ref: "#/definitions/Work%20Package%20Embedded"
      _links:
        $ref: "#/definitions/Work%20Package%20Links"

  Work Package Embedded:
    type: "object"
    properties:
      # incomplete
      parent:
        $ref: "#/definitions/Work%20Package"
      project:
        $ref: "#/definitions/Project"
      type:
        $ref: "#/definitions/WPType"
      version:
        $ref: "#/definitions/Version"

  Work Package Links:
    type: "object"
    properties:
      self:
        $ref: "#/definitions/Link"
      update:
        $ref: "#/definitions/Link"
      schema:
        $ref: "#/definitions/Link"
      updateImmediately:
        $ref: "#/definitions/Link"
      logTime:
        $ref: "#/definitions/Link"
      move:
        $ref: "#/definitions/Link"
      copy:
        $ref: "#/definitions/Link"
      pdf:
        $ref: "#/definitions/Link"
      atom:
        $ref: "#/definitions/Link"
      available_relation_candidates:
        $ref: "#/definitions/Link"
      activities:
        $ref: "#/definitions/Link"
      attachments:
        $ref: "#/definitions/Link"
      addAttachment:
        $ref: "#/definitions/Link"
      availableWatchers:
        $ref: "#/definitions/Link"
      relations:
        $ref: "#/definitions/Link"
      revisions:
        $ref: "#/definitions/Link"
      watch:
        $ref: "#/definitions/Link"
      watchers:
        $ref: "#/definitions/Link"
      addWatcher:
        $ref: "#/definitions/Link"
      removeWatcher:
        $ref: "#/definitions/Link"
      addRelation:
        $ref: "#/definitions/Link"
      addChild:
        $ref: "#/definitions/Link"
      changeParent:
        $ref: "#/definitions/Link"
      addComment:
        $ref: "#/definitions/Link"
      previewMarkup:
        $ref: "#/definitions/Link"
      timeEntries:
        $ref: "#/definitions/Link"
      ancestors:
        type: "array"
        items:
          $ref: "#/definitions/Link"
      category:
        $ref: "#/definitions/Link"
      type:
        $ref: "#/definitions/Link"
      priority:
        $ref: "#/definitions/Link"
      project:
        $ref: "#/definitions/Link"
      status:
        $ref: "#/definitions/Link"
      author:
        $ref: "#/definitions/Link"
      responsible:
        $ref: "#/definitions/Link"
      assignee:
        $ref: "#/definitions/Link"
      version:
        $ref: "#/definitions/Link"
      parent:
        $ref: "#/definitions/Link"
      logCosts:
        $ref: "#/definitions/Link"
      showCosts:
        $ref: "#/definitions/Link"
      costObject:
        $ref: "#/definitions/Link"
      costsByType:
        $ref: "#/definitions/Link"

  Work Packages:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      _embedded:
        $ref: "#/definitions/Work%20Packages%20embedded"

  Work Packages embedded:
    type: "object"
    properties:
      elements:
        type: "array"
        items:
          $ref: "#/definitions/Work%20Package"


  Work PackageModel: {}
  Work Package Schema: {}
  Work Package Schemas: {}
  Work Package SchemasModel: {}
  Work Package Edit Form: {}
  Work PackagesModel: {}
  Work Package Create Form: {}
  Work Packages by Project: {}
  Work Packages by ProjectModel: {}
  Work Package Relation Form: {}
  Work Package Relation FormModel: {}
  Watchers: {}
  WatchersModel: {}
  Remove Watcher: {}
  Available relation candidates: {}
  Available relation candidatesModel: {}
  Available Watchers: {}
  Available WatchersModel: {}
  Available Projects: {}
  Available ProjectsModel: {}
  Revisions: {}
  RevisionsModel: {}
  Work Package activities: {}
  Work Package activitiesModel: {}
  Available Assignees: {}
  Available AssigneesModel: {}
  Available Responsibles: {}
  Available ResponsiblesModel: {}
